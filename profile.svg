<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="458" onload="init(evt)" viewBox="0 0 1200 458" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="458" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">/home/nicolas/Documents/development/thesis/code/thesis_env/bin/py-spy record -o profile.svg --pid 44929</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="447.00"> </text><svg id="frames" x="10" width="1180" total_samples="12427"><g><title>__next__ (torch/utils/data/dataloader.py:626) (14 samples, 0.11%)</title><rect x="0.0000%" y="116" width="0.1127%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="14"/><text x="0.2500%" y="126.50"></text></g><g><title>get (dataset.py:49) (53 samples, 0.43%)</title><rect x="0.4265%" y="196" width="0.4265%" height="15" fill="rgb(217,0,24)" fg:x="53" fg:w="53"/><text x="0.6765%" y="206.50"></text></g><g><title>get (dataset.py:50) (33 samples, 0.27%)</title><rect x="0.8530%" y="196" width="0.2656%" height="15" fill="rgb(221,193,54)" fg:x="106" fg:w="33"/><text x="1.1030%" y="206.50"></text></g><g><title>__getitem__ (torch_geometric/data/dataset.py:291) (126 samples, 1.01%)</title><rect x="0.3943%" y="180" width="1.0139%" height="15" fill="rgb(248,212,6)" fg:x="49" fg:w="126"/><text x="0.6443%" y="190.50"></text></g><g><title>indices (torch_geometric/data/dataset.py:118) (33 samples, 0.27%)</title><rect x="1.1427%" y="196" width="0.2656%" height="15" fill="rgb(208,68,35)" fg:x="142" fg:w="33"/><text x="1.3927%" y="206.50"></text></g><g><title>len (dataset.py:46) (23 samples, 0.19%)</title><rect x="1.2231%" y="212" width="0.1851%" height="15" fill="rgb(232,128,0)" fg:x="152" fg:w="23"/><text x="1.4731%" y="222.50"></text></g><g><title>fetch (torch/utils/data/_utils/fetch.py:52) (141 samples, 1.13%)</title><rect x="0.2897%" y="148" width="1.1346%" height="15" fill="rgb(207,160,47)" fg:x="36" fg:w="141"/><text x="0.5397%" y="158.50"></text></g><g><title>&lt;listcomp&gt; (torch/utils/data/_utils/fetch.py:52) (141 samples, 1.13%)</title><rect x="0.2897%" y="164" width="1.1346%" height="15" fill="rgb(228,23,34)" fg:x="36" fg:w="141"/><text x="0.5397%" y="174.50"></text></g><g><title>train (train.py:138) (233 samples, 1.87%)</title><rect x="0.0000%" y="100" width="1.8749%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="233"/><text x="0.2500%" y="110.50">t..</text></g><g><title>__next__ (torch/utils/data/dataloader.py:630) (219 samples, 1.76%)</title><rect x="0.1127%" y="116" width="1.7623%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="219"/><text x="0.3627%" y="126.50"></text></g><g><title>_next_data (torch/utils/data/dataloader.py:673) (214 samples, 1.72%)</title><rect x="0.1529%" y="132" width="1.7221%" height="15" fill="rgb(250,228,42)" fg:x="19" fg:w="214"/><text x="0.4029%" y="142.50"></text></g><g><title>fetch (torch/utils/data/_utils/fetch.py:55) (56 samples, 0.45%)</title><rect x="1.4243%" y="148" width="0.4506%" height="15" fill="rgb(240,193,28)" fg:x="177" fg:w="56"/><text x="1.6743%" y="158.50"></text></g><g><title>__call__ (torch_geometric/loader/dataloader.py:47) (53 samples, 0.43%)</title><rect x="1.4485%" y="164" width="0.4265%" height="15" fill="rgb(216,20,37)" fg:x="180" fg:w="53"/><text x="1.6985%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/loader/dataloader.py:47) (53 samples, 0.43%)</title><rect x="1.4485%" y="180" width="0.4265%" height="15" fill="rgb(206,188,39)" fg:x="180" fg:w="53"/><text x="1.6985%" y="190.50"></text></g><g><title>__call__ (torch_geometric/loader/dataloader.py:33) (52 samples, 0.42%)</title><rect x="1.4565%" y="196" width="0.4184%" height="15" fill="rgb(217,207,13)" fg:x="181" fg:w="52"/><text x="1.7065%" y="206.50"></text></g><g><title>default_collate (torch/utils/data/_utils/collate.py:317) (52 samples, 0.42%)</title><rect x="1.4565%" y="212" width="0.4184%" height="15" fill="rgb(231,73,38)" fg:x="181" fg:w="52"/><text x="1.7065%" y="222.50"></text></g><g><title>collate (torch/utils/data/_utils/collate.py:142) (52 samples, 0.42%)</title><rect x="1.4565%" y="228" width="0.4184%" height="15" fill="rgb(225,20,46)" fg:x="181" fg:w="52"/><text x="1.7065%" y="238.50"></text></g><g><title>collate_tensor_fn (torch/utils/data/_utils/collate.py:214) (51 samples, 0.41%)</title><rect x="1.4646%" y="244" width="0.4104%" height="15" fill="rgb(210,31,41)" fg:x="182" fg:w="51"/><text x="1.7146%" y="254.50"></text></g><g><title>zero_grad (torch/optim/optimizer.py:945) (36 samples, 0.29%)</title><rect x="2.9854%" y="164" width="0.2897%" height="15" fill="rgb(221,200,47)" fg:x="371" fg:w="36"/><text x="3.2354%" y="174.50"></text></g><g><title>train_step (train.py:29) (124 samples, 1.00%)</title><rect x="2.8486%" y="116" width="0.9978%" height="15" fill="rgb(226,26,5)" fg:x="354" fg:w="124"/><text x="3.0986%" y="126.50"></text></g><g><title>inner (torch/_compile.py:31) (124 samples, 1.00%)</title><rect x="2.8486%" y="132" width="0.9978%" height="15" fill="rgb(249,33,26)" fg:x="354" fg:w="124"/><text x="3.0986%" y="142.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:600) (124 samples, 1.00%)</title><rect x="2.8486%" y="148" width="0.9978%" height="15" fill="rgb(235,183,28)" fg:x="354" fg:w="124"/><text x="3.0986%" y="158.50"></text></g><g><title>zero_grad (torch/optim/optimizer.py:947) (71 samples, 0.57%)</title><rect x="3.2751%" y="164" width="0.5713%" height="15" fill="rgb(221,5,38)" fg:x="407" fg:w="71"/><text x="3.5251%" y="174.50"></text></g><g><title>children (torch/nn/modules/module.py:2345) (14 samples, 0.11%)</title><rect x="4.0235%" y="196" width="0.1127%" height="15" fill="rgb(247,18,42)" fg:x="500" fg:w="14"/><text x="4.2735%" y="206.50"></text></g><g><title>train (torch/nn/modules/module.py:2455) (20 samples, 0.16%)</title><rect x="3.9913%" y="180" width="0.1609%" height="15" fill="rgb(241,131,45)" fg:x="496" fg:w="20"/><text x="4.2413%" y="190.50"></text></g><g><title>train (torch/nn/modules/module.py:2454) (36 samples, 0.29%)</title><rect x="4.1683%" y="196" width="0.2897%" height="15" fill="rgb(249,31,29)" fg:x="518" fg:w="36"/><text x="4.4183%" y="206.50"></text></g><g><title>named_children (torch/nn/modules/module.py:2363) (17 samples, 0.14%)</title><rect x="4.5868%" y="228" width="0.1368%" height="15" fill="rgb(225,111,53)" fg:x="570" fg:w="17"/><text x="4.8368%" y="238.50"></text></g><g><title>children (torch/nn/modules/module.py:2345) (48 samples, 0.39%)</title><rect x="4.4661%" y="212" width="0.3863%" height="15" fill="rgb(238,160,17)" fg:x="555" fg:w="48"/><text x="4.7161%" y="222.50"></text></g><g><title>train (torch/nn/modules/module.py:2455) (54 samples, 0.43%)</title><rect x="4.4580%" y="196" width="0.4345%" height="15" fill="rgb(214,148,48)" fg:x="554" fg:w="54"/><text x="4.7080%" y="206.50"></text></g><g><title>__setattr__ (torch/nn/modules/module.py:1740) (16 samples, 0.13%)</title><rect x="5.2145%" y="228" width="0.1288%" height="15" fill="rgb(232,36,49)" fg:x="648" fg:w="16"/><text x="5.4645%" y="238.50"></text></g><g><title>__instancecheck__ (torch/nn/parameter.py:10) (14 samples, 0.11%)</title><rect x="5.4237%" y="244" width="0.1127%" height="15" fill="rgb(209,103,24)" fg:x="674" fg:w="14"/><text x="5.6737%" y="254.50"></text></g><g><title>__setattr__ (torch/nn/modules/module.py:1741) (52 samples, 0.42%)</title><rect x="5.3432%" y="228" width="0.4184%" height="15" fill="rgb(229,88,8)" fg:x="664" fg:w="52"/><text x="5.5932%" y="238.50"></text></g><g><title>__instancecheck__ (torch/nn/parameter.py:9) (28 samples, 0.23%)</title><rect x="5.5363%" y="244" width="0.2253%" height="15" fill="rgb(213,181,19)" fg:x="688" fg:w="28"/><text x="5.7863%" y="254.50"></text></g><g><title>__setattr__ (torch/nn/modules/module.py:1754) (15 samples, 0.12%)</title><rect x="5.8019%" y="228" width="0.1207%" height="15" fill="rgb(254,191,54)" fg:x="721" fg:w="15"/><text x="6.0519%" y="238.50"></text></g><g><title>train (torch/nn/modules/module.py:2454) (149 samples, 1.20%)</title><rect x="5.0455%" y="212" width="1.1990%" height="15" fill="rgb(241,83,37)" fg:x="627" fg:w="149"/><text x="5.2955%" y="222.50"></text></g><g><title>__setattr__ (torch/nn/modules/module.py:1788) (24 samples, 0.19%)</title><rect x="6.0513%" y="228" width="0.1931%" height="15" fill="rgb(233,36,39)" fg:x="752" fg:w="24"/><text x="6.3013%" y="238.50"></text></g><g><title>train_step (train.py:30) (349 samples, 2.81%)</title><rect x="3.8465%" y="116" width="2.8084%" height="15" fill="rgb(226,3,54)" fg:x="478" fg:w="349"/><text x="4.0965%" y="126.50">tr..</text></g><g><title>train (torch/nn/modules/module.py:2456) (345 samples, 2.78%)</title><rect x="3.8787%" y="132" width="2.7762%" height="15" fill="rgb(245,192,40)" fg:x="482" fg:w="345"/><text x="4.1287%" y="142.50">tr..</text></g><g><title>train (torch/nn/modules/module.py:2456) (337 samples, 2.71%)</title><rect x="3.9430%" y="148" width="2.7118%" height="15" fill="rgb(238,167,29)" fg:x="490" fg:w="337"/><text x="4.1930%" y="158.50">tr..</text></g><g><title>train (torch/nn/modules/module.py:2456) (331 samples, 2.66%)</title><rect x="3.9913%" y="164" width="2.6636%" height="15" fill="rgb(232,182,51)" fg:x="496" fg:w="331"/><text x="4.2413%" y="174.50">tr..</text></g><g><title>train (torch/nn/modules/module.py:2456) (311 samples, 2.50%)</title><rect x="4.1522%" y="180" width="2.5026%" height="15" fill="rgb(231,60,39)" fg:x="516" fg:w="311"/><text x="4.4022%" y="190.50">tr..</text></g><g><title>train (torch/nn/modules/module.py:2456) (219 samples, 1.76%)</title><rect x="4.8926%" y="196" width="1.7623%" height="15" fill="rgb(208,69,12)" fg:x="608" fg:w="219"/><text x="5.1426%" y="206.50"></text></g><g><title>train (torch/nn/modules/module.py:2455) (51 samples, 0.41%)</title><rect x="6.2445%" y="212" width="0.4104%" height="15" fill="rgb(235,93,37)" fg:x="776" fg:w="51"/><text x="6.4945%" y="222.50"></text></g><g><title>children (torch/nn/modules/module.py:2345) (34 samples, 0.27%)</title><rect x="6.3813%" y="228" width="0.2736%" height="15" fill="rgb(213,116,39)" fg:x="793" fg:w="34"/><text x="6.6313%" y="238.50"></text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:854) (30 samples, 0.24%)</title><rect x="6.7353%" y="132" width="0.2414%" height="15" fill="rgb(222,207,29)" fg:x="837" fg:w="30"/><text x="6.9853%" y="142.50"></text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:857) (17 samples, 0.14%)</title><rect x="6.9767%" y="132" width="0.1368%" height="15" fill="rgb(206,96,30)" fg:x="867" fg:w="17"/><text x="7.2267%" y="142.50"></text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:862) (24 samples, 0.19%)</title><rect x="7.1135%" y="132" width="0.1931%" height="15" fill="rgb(218,138,4)" fg:x="884" fg:w="24"/><text x="7.3635%" y="142.50"></text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:894) (17 samples, 0.14%)</title><rect x="7.7493%" y="132" width="0.1368%" height="15" fill="rgb(250,191,14)" fg:x="963" fg:w="17"/><text x="7.9993%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (graph_maker.py:915) (367 samples, 2.95%)</title><rect x="8.6827%" y="148" width="2.9532%" height="15" fill="rgb(239,60,40)" fg:x="1079" fg:w="367"/><text x="8.9327%" y="158.50">&lt;li..</text></g><g><title>__iter__ (torch/_tensor.py:1053) (21 samples, 0.17%)</title><rect x="11.4670%" y="164" width="0.1690%" height="15" fill="rgb(206,27,48)" fg:x="1425" fg:w="21"/><text x="11.7170%" y="174.50"></text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:915) (418 samples, 3.36%)</title><rect x="8.3206%" y="132" width="3.3636%" height="15" fill="rgb(225,35,8)" fg:x="1034" fg:w="418"/><text x="8.5706%" y="142.50">cre..</text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:918) (15 samples, 0.12%)</title><rect x="11.6842%" y="132" width="0.1207%" height="15" fill="rgb(250,213,24)" fg:x="1452" fg:w="15"/><text x="11.9342%" y="142.50"></text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:925) (16 samples, 0.13%)</title><rect x="11.8693%" y="132" width="0.1288%" height="15" fill="rgb(247,123,22)" fg:x="1475" fg:w="16"/><text x="12.1193%" y="142.50"></text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:927) (28 samples, 0.23%)</title><rect x="12.0544%" y="132" width="0.2253%" height="15" fill="rgb(231,138,38)" fg:x="1498" fg:w="28"/><text x="12.3044%" y="142.50"></text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:939) (17 samples, 0.14%)</title><rect x="12.6901%" y="132" width="0.1368%" height="15" fill="rgb(231,145,46)" fg:x="1577" fg:w="17"/><text x="12.9401%" y="142.50"></text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:944) (36 samples, 0.29%)</title><rect x="12.9476%" y="132" width="0.2897%" height="15" fill="rgb(251,118,11)" fg:x="1609" fg:w="36"/><text x="13.1976%" y="142.50"></text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:953) (16 samples, 0.13%)</title><rect x="13.4546%" y="132" width="0.1288%" height="15" fill="rgb(217,147,25)" fg:x="1672" fg:w="16"/><text x="13.7046%" y="142.50"></text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:965) (14 samples, 0.11%)</title><rect x="13.8408%" y="132" width="0.1127%" height="15" fill="rgb(247,81,37)" fg:x="1720" fg:w="14"/><text x="14.0908%" y="142.50"></text></g><g><title>forward (torch_geometric/transforms/to_undirected.py:53) (18 samples, 0.14%)</title><rect x="14.3558%" y="164" width="0.1448%" height="15" fill="rgb(209,12,38)" fg:x="1784" fg:w="18"/><text x="14.6058%" y="174.50"></text></g><g><title>forward (torch_geometric/transforms/to_undirected.py:55) (14 samples, 0.11%)</title><rect x="14.5007%" y="164" width="0.1127%" height="15" fill="rgb(227,1,9)" fg:x="1802" fg:w="14"/><text x="14.7507%" y="174.50"></text></g><g><title>__getitem__ (torch_geometric/data/hetero_data.py:188) (13 samples, 0.10%)</title><rect x="14.5087%" y="180" width="0.1046%" height="15" fill="rgb(248,47,43)" fg:x="1803" fg:w="13"/><text x="14.7587%" y="190.50"></text></g><g><title>coalesce (torch_geometric/utils/_coalesce.py:132) (23 samples, 0.19%)</title><rect x="15.0157%" y="196" width="0.1851%" height="15" fill="rgb(221,10,30)" fg:x="1866" fg:w="23"/><text x="15.2657%" y="206.50"></text></g><g><title>maybe_num_nodes (torch_geometric/utils/num_nodes.py:32) (18 samples, 0.14%)</title><rect x="15.0559%" y="212" width="0.1448%" height="15" fill="rgb(210,229,1)" fg:x="1871" fg:w="18"/><text x="15.3059%" y="222.50"></text></g><g><title>coalesce (torch_geometric/utils/_coalesce.py:147) (32 samples, 0.26%)</title><rect x="15.4663%" y="196" width="0.2575%" height="15" fill="rgb(222,148,37)" fg:x="1922" fg:w="32"/><text x="15.7163%" y="206.50"></text></g><g><title>index_sort (torch_geometric/utils/_index_sort.py:31) (24 samples, 0.19%)</title><rect x="15.5307%" y="212" width="0.1931%" height="15" fill="rgb(234,67,33)" fg:x="1930" fg:w="24"/><text x="15.7807%" y="222.50"></text></g><g><title>coalesce (torch_geometric/utils/_coalesce.py:166) (35 samples, 0.28%)</title><rect x="15.8606%" y="196" width="0.2816%" height="15" fill="rgb(247,98,35)" fg:x="1971" fg:w="35"/><text x="16.1106%" y="206.50"></text></g><g><title>coalesce (torch_geometric/utils/_coalesce.py:174) (20 samples, 0.16%)</title><rect x="16.1503%" y="196" width="0.1609%" height="15" fill="rgb(247,138,52)" fg:x="2007" fg:w="20"/><text x="16.4003%" y="206.50"></text></g><g><title>coalesce (torch_geometric/utils/_coalesce.py:186) (17 samples, 0.14%)</title><rect x="16.3595%" y="196" width="0.1368%" height="15" fill="rgb(213,79,30)" fg:x="2033" fg:w="17"/><text x="16.6095%" y="206.50"></text></g><g><title>coalesce (torch_geometric/utils/_coalesce.py:196) (18 samples, 0.14%)</title><rect x="16.4963%" y="196" width="0.1448%" height="15" fill="rgb(246,177,23)" fg:x="2050" fg:w="18"/><text x="16.7463%" y="206.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/utils/_coalesce.py:196) (17 samples, 0.14%)</title><rect x="16.5044%" y="212" width="0.1368%" height="15" fill="rgb(230,62,27)" fg:x="2051" fg:w="17"/><text x="16.7544%" y="222.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:75) (15 samples, 0.12%)</title><rect x="16.5205%" y="228" width="0.1207%" height="15" fill="rgb(216,154,8)" fg:x="2053" fg:w="15"/><text x="16.7705%" y="238.50"></text></g><g><title>forward (torch_geometric/transforms/to_undirected.py:73) (227 samples, 1.83%)</title><rect x="14.8306%" y="164" width="1.8267%" height="15" fill="rgb(244,35,45)" fg:x="1843" fg:w="227"/><text x="15.0806%" y="174.50">f..</text></g><g><title>to_undirected (torch_geometric/utils/undirected.py:209) (207 samples, 1.67%)</title><rect x="14.9916%" y="180" width="1.6657%" height="15" fill="rgb(251,115,12)" fg:x="1863" fg:w="207"/><text x="15.2416%" y="190.50"></text></g><g><title>__call__ (torch_geometric/transforms/base_transform.py:32) (323 samples, 2.60%)</title><rect x="14.0903%" y="148" width="2.5992%" height="15" fill="rgb(240,54,50)" fg:x="1751" fg:w="323"/><text x="14.3403%" y="158.50">__..</text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:993) (328 samples, 2.64%)</title><rect x="14.0581%" y="132" width="2.6394%" height="15" fill="rgb(233,84,52)" fg:x="1747" fg:w="328"/><text x="14.3081%" y="142.50">cr..</text></g><g><title>copy (copy.py:84) (16 samples, 0.13%)</title><rect x="16.7538%" y="164" width="0.1288%" height="15" fill="rgb(207,117,47)" fg:x="2082" fg:w="16"/><text x="17.0038%" y="174.50"></text></g><g><title>forward (torch_geometric/transforms/add_self_loops.py:46) (40 samples, 0.32%)</title><rect x="16.8987%" y="164" width="0.3219%" height="15" fill="rgb(249,43,39)" fg:x="2100" fg:w="40"/><text x="17.1487%" y="174.50"></text></g><g><title>train_step (train.py:33) (1,325 samples, 10.66%)</title><rect x="6.6549%" y="116" width="10.6623%" height="15" fill="rgb(209,38,44)" fg:x="827" fg:w="1325"/><text x="6.9049%" y="126.50">train_step (trai..</text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:994) (77 samples, 0.62%)</title><rect x="16.6975%" y="132" width="0.6196%" height="15" fill="rgb(236,212,23)" fg:x="2075" fg:w="77"/><text x="16.9475%" y="142.50"></text></g><g><title>__call__ (torch_geometric/transforms/base_transform.py:32) (70 samples, 0.56%)</title><rect x="16.7538%" y="148" width="0.5633%" height="15" fill="rgb(242,79,21)" fg:x="2082" fg:w="70"/><text x="17.0038%" y="158.50"></text></g><g><title>train_step (train.py:35) (19 samples, 0.15%)</title><rect x="17.3171%" y="116" width="0.1529%" height="15" fill="rgb(211,96,35)" fg:x="2152" fg:w="19"/><text x="17.5671%" y="126.50"></text></g><g><title>__setitem__ (torch_geometric/data/storage.py:121) (19 samples, 0.15%)</title><rect x="17.6471%" y="180" width="0.1529%" height="15" fill="rgb(253,215,40)" fg:x="2193" fg:w="19"/><text x="17.8971%" y="190.50"></text></g><g><title>_pop_cache (torch_geometric/data/storage.py:83) (18 samples, 0.14%)</title><rect x="17.6551%" y="196" width="0.1448%" height="15" fill="rgb(211,81,21)" fg:x="2194" fg:w="18"/><text x="17.9051%" y="206.50"></text></g><g><title>apply (torch_geometric/data/data.py:342) (109 samples, 0.88%)</title><rect x="17.5907%" y="148" width="0.8771%" height="15" fill="rgb(208,190,38)" fg:x="2186" fg:w="109"/><text x="17.8407%" y="158.50"></text></g><g><title>apply (torch_geometric/data/storage.py:201) (105 samples, 0.84%)</title><rect x="17.6229%" y="164" width="0.8449%" height="15" fill="rgb(235,213,38)" fg:x="2190" fg:w="105"/><text x="17.8729%" y="174.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:897) (82 samples, 0.66%)</title><rect x="17.8080%" y="180" width="0.6599%" height="15" fill="rgb(237,122,38)" fg:x="2213" fg:w="82"/><text x="18.0580%" y="190.50"></text></g><g><title>&lt;lambda&gt; (torch_geometric/data/data.py:349) (81 samples, 0.65%)</title><rect x="17.8160%" y="196" width="0.6518%" height="15" fill="rgb(244,218,35)" fg:x="2214" fg:w="81"/><text x="18.0660%" y="206.50"></text></g><g><title>clone (torch_geometric/data/data.py:349) (129 samples, 1.04%)</title><rect x="17.5585%" y="132" width="1.0381%" height="15" fill="rgb(240,68,47)" fg:x="2182" fg:w="129"/><text x="17.8085%" y="142.50"></text></g><g><title>copy (copy.py:84) (16 samples, 0.13%)</title><rect x="18.4679%" y="148" width="0.1288%" height="15" fill="rgb(210,16,53)" fg:x="2295" fg:w="16"/><text x="18.7179%" y="158.50"></text></g><g><title>__setitem__ (torch_geometric/data/storage.py:121) (19 samples, 0.15%)</title><rect x="18.7012%" y="180" width="0.1529%" height="15" fill="rgb(235,124,12)" fg:x="2324" fg:w="19"/><text x="18.9512%" y="190.50"></text></g><g><title>_pop_cache (torch_geometric/data/storage.py:83) (17 samples, 0.14%)</title><rect x="18.7173%" y="196" width="0.1368%" height="15" fill="rgb(224,169,11)" fg:x="2326" fg:w="17"/><text x="18.9673%" y="206.50"></text></g><g><title>to (torch_geometric/data/data.py:362) (54 samples, 0.43%)</title><rect x="18.5966%" y="132" width="0.4345%" height="15" fill="rgb(250,166,2)" fg:x="2311" fg:w="54"/><text x="18.8466%" y="142.50"></text></g><g><title>apply (torch_geometric/data/data.py:342) (53 samples, 0.43%)</title><rect x="18.6047%" y="148" width="0.4265%" height="15" fill="rgb(242,216,29)" fg:x="2312" fg:w="53"/><text x="18.8547%" y="158.50"></text></g><g><title>apply (torch_geometric/data/storage.py:201) (44 samples, 0.35%)</title><rect x="18.6771%" y="164" width="0.3541%" height="15" fill="rgb(230,116,27)" fg:x="2321" fg:w="44"/><text x="18.9271%" y="174.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:897) (15 samples, 0.12%)</title><rect x="18.9104%" y="180" width="0.1207%" height="15" fill="rgb(228,99,48)" fg:x="2350" fg:w="15"/><text x="19.1604%" y="190.50"></text></g><g><title>&lt;lambda&gt; (torch_geometric/data/data.py:363) (15 samples, 0.12%)</title><rect x="18.9104%" y="196" width="0.1207%" height="15" fill="rgb(253,11,6)" fg:x="2350" fg:w="15"/><text x="19.1604%" y="206.50"></text></g><g><title>train_step (train.py:38) (194 samples, 1.56%)</title><rect x="17.4781%" y="116" width="1.5611%" height="15" fill="rgb(247,143,39)" fg:x="2172" fg:w="194"/><text x="17.7281%" y="126.50"></text></g><g><title>forward (modules.py:162) (15 samples, 0.12%)</title><rect x="19.0553%" y="164" width="0.1207%" height="15" fill="rgb(236,97,10)" fg:x="2368" fg:w="15"/><text x="19.3053%" y="174.50"></text></g><g><title>forward (modules.py:163) (58 samples, 0.47%)</title><rect x="19.1760%" y="164" width="0.4667%" height="15" fill="rgb(233,208,19)" fg:x="2383" fg:w="58"/><text x="19.4260%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (55 samples, 0.44%)</title><rect x="19.2001%" y="180" width="0.4426%" height="15" fill="rgb(216,164,2)" fg:x="2386" fg:w="55"/><text x="19.4501%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (51 samples, 0.41%)</title><rect x="19.2323%" y="196" width="0.4104%" height="15" fill="rgb(220,129,5)" fg:x="2390" fg:w="51"/><text x="19.4823%" y="206.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (50 samples, 0.40%)</title><rect x="19.2404%" y="212" width="0.4023%" height="15" fill="rgb(242,17,10)" fg:x="2391" fg:w="50"/><text x="19.4904%" y="222.50"></text></g><g><title>forward (modules.py:164) (13 samples, 0.10%)</title><rect x="19.6427%" y="164" width="0.1046%" height="15" fill="rgb(242,107,0)" fg:x="2441" fg:w="13"/><text x="19.8927%" y="174.50"></text></g><g><title>collect (torch_geometric/data/hetero_data.py:562) (26 samples, 0.21%)</title><rect x="19.9887%" y="196" width="0.2092%" height="15" fill="rgb(251,28,31)" fg:x="2484" fg:w="26"/><text x="20.2387%" y="206.50"></text></g><g><title>collect (torch_geometric/data/hetero_data.py:563) (14 samples, 0.11%)</title><rect x="20.1980%" y="196" width="0.1127%" height="15" fill="rgb(233,223,10)" fg:x="2510" fg:w="14"/><text x="20.4480%" y="206.50"></text></g><g><title>__getattr__ (torch_geometric/data/hetero_data.py:161) (48 samples, 0.39%)</title><rect x="19.9324%" y="180" width="0.3863%" height="15" fill="rgb(215,21,27)" fg:x="2477" fg:w="48"/><text x="20.1824%" y="190.50"></text></g><g><title>to_external_key (torch_geometric/nn/module_dict.py:45) (22 samples, 0.18%)</title><rect x="20.5681%" y="260" width="0.1770%" height="15" fill="rgb(232,23,21)" fg:x="2556" fg:w="22"/><text x="20.8181%" y="270.50"></text></g><g><title>forward (torch_geometric/nn/conv/hetero_conv.py:118) (61 samples, 0.49%)</title><rect x="20.3750%" y="212" width="0.4909%" height="15" fill="rgb(244,5,23)" fg:x="2532" fg:w="61"/><text x="20.6250%" y="222.50"></text></g><g><title>items (torch_geometric/nn/module_dict.py:69) (54 samples, 0.43%)</title><rect x="20.4313%" y="228" width="0.4345%" height="15" fill="rgb(226,81,46)" fg:x="2539" fg:w="54"/><text x="20.6813%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/nn/module_dict.py:69) (51 samples, 0.41%)</title><rect x="20.4555%" y="244" width="0.4104%" height="15" fill="rgb(247,70,30)" fg:x="2542" fg:w="51"/><text x="20.7055%" y="254.50"></text></g><g><title>forward (torch_geometric/nn/conv/gatv2_conv.py:286) (53 samples, 0.43%)</title><rect x="21.6706%" y="260" width="0.4265%" height="15" fill="rgb(212,68,19)" fg:x="2693" fg:w="53"/><text x="21.9206%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (44 samples, 0.35%)</title><rect x="21.7430%" y="276" width="0.3541%" height="15" fill="rgb(240,187,13)" fg:x="2702" fg:w="44"/><text x="21.9930%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (41 samples, 0.33%)</title><rect x="21.7671%" y="292" width="0.3299%" height="15" fill="rgb(223,113,26)" fg:x="2705" fg:w="41"/><text x="22.0171%" y="302.50"></text></g><g><title>forward (torch_geometric/nn/dense/linear.py:147) (40 samples, 0.32%)</title><rect x="21.7752%" y="308" width="0.3219%" height="15" fill="rgb(206,192,2)" fg:x="2706" fg:w="40"/><text x="22.0252%" y="318.50"></text></g><g><title>forward (torch_geometric/nn/conv/gatv2_conv.py:290) (28 samples, 0.23%)</title><rect x="22.0970%" y="260" width="0.2253%" height="15" fill="rgb(241,108,4)" fg:x="2746" fg:w="28"/><text x="22.3470%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (21 samples, 0.17%)</title><rect x="22.1534%" y="276" width="0.1690%" height="15" fill="rgb(247,173,49)" fg:x="2753" fg:w="21"/><text x="22.4034%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (20 samples, 0.16%)</title><rect x="22.1614%" y="292" width="0.1609%" height="15" fill="rgb(224,114,35)" fg:x="2754" fg:w="20"/><text x="22.4114%" y="302.50"></text></g><g><title>forward (torch_geometric/nn/dense/linear.py:147) (20 samples, 0.16%)</title><rect x="22.1614%" y="308" width="0.1609%" height="15" fill="rgb(245,159,27)" fg:x="2754" fg:w="20"/><text x="22.4114%" y="318.50"></text></g><g><title>forward (torch_geometric/nn/conv/gatv2_conv.py:298) (398 samples, 3.20%)</title><rect x="22.4350%" y="260" width="3.2027%" height="15" fill="rgb(245,172,44)" fg:x="2788" fg:w="398"/><text x="22.6850%" y="270.50">for..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (350 samples, 2.82%)</title><rect x="22.8213%" y="276" width="2.8164%" height="15" fill="rgb(236,23,11)" fg:x="2836" fg:w="350"/><text x="23.0713%" y="286.50">_w..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (340 samples, 2.74%)</title><rect x="22.9017%" y="292" width="2.7360%" height="15" fill="rgb(205,117,38)" fg:x="2846" fg:w="340"/><text x="23.1517%" y="302.50">_c..</text></g><g><title>forward (torch_geometric/nn/dense/linear.py:147) (338 samples, 2.72%)</title><rect x="22.9178%" y="308" width="2.7199%" height="15" fill="rgb(237,72,25)" fg:x="2848" fg:w="338"/><text x="23.1678%" y="318.50">fo..</text></g><g><title>forward (torch_geometric/nn/conv/gatv2_conv.py:300) (244 samples, 1.96%)</title><rect x="25.6538%" y="260" width="1.9635%" height="15" fill="rgb(244,70,9)" fg:x="3188" fg:w="244"/><text x="25.9038%" y="270.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (197 samples, 1.59%)</title><rect x="26.0320%" y="276" width="1.5853%" height="15" fill="rgb(217,125,39)" fg:x="3235" fg:w="197"/><text x="26.2820%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (183 samples, 1.47%)</title><rect x="26.1447%" y="292" width="1.4726%" height="15" fill="rgb(235,36,10)" fg:x="3249" fg:w="183"/><text x="26.3947%" y="302.50"></text></g><g><title>forward (torch_geometric/nn/dense/linear.py:147) (182 samples, 1.46%)</title><rect x="26.1527%" y="308" width="1.4646%" height="15" fill="rgb(251,123,47)" fg:x="3250" fg:w="182"/><text x="26.4027%" y="318.50"></text></g><g><title>_check_input (torch_geometric/nn/conv/message_passing.py:213) (15 samples, 0.12%)</title><rect x="28.0760%" y="292" width="0.1207%" height="15" fill="rgb(221,13,13)" fg:x="3489" fg:w="15"/><text x="28.3260%" y="302.50"></text></g><g><title>is_sparse (torch_geometric/utils/sparse.py:141) (15 samples, 0.12%)</title><rect x="28.0760%" y="308" width="0.1207%" height="15" fill="rgb(238,131,9)" fg:x="3489" fg:w="15"/><text x="28.3260%" y="318.50"></text></g><g><title>edge_updater (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_edge_updater_8df3c6zj.py:143) (56 samples, 0.45%)</title><rect x="27.9714%" y="276" width="0.4506%" height="15" fill="rgb(211,50,8)" fg:x="3476" fg:w="56"/><text x="28.2214%" y="286.50"></text></g><g><title>_check_input (torch_geometric/nn/conv/message_passing.py:237) (14 samples, 0.11%)</title><rect x="28.3093%" y="292" width="0.1127%" height="15" fill="rgb(245,182,24)" fg:x="3518" fg:w="14"/><text x="28.5593%" y="302.50"></text></g><g><title>edge_collect (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_edge_updater_8df3c6zj.py:111) (111 samples, 0.89%)</title><rect x="28.5346%" y="292" width="0.8932%" height="15" fill="rgb(242,14,37)" fg:x="3546" fg:w="111"/><text x="28.7846%" y="302.50"></text></g><g><title>_index_select (torch_geometric/nn/conv/message_passing.py:267) (99 samples, 0.80%)</title><rect x="28.6312%" y="308" width="0.7967%" height="15" fill="rgb(246,228,12)" fg:x="3558" fg:w="99"/><text x="28.8812%" y="318.50"></text></g><g><title>_index_select_safe (torch_geometric/nn/conv/message_passing.py:271) (99 samples, 0.80%)</title><rect x="28.6312%" y="324" width="0.7967%" height="15" fill="rgb(213,55,15)" fg:x="3558" fg:w="99"/><text x="28.8812%" y="334.50"></text></g><g><title>edge_collect (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_edge_updater_8df3c6zj.py:125) (13 samples, 0.10%)</title><rect x="29.4359%" y="292" width="0.1046%" height="15" fill="rgb(209,9,3)" fg:x="3658" fg:w="13"/><text x="29.6859%" y="302.50"></text></g><g><title>edge_collect (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_edge_updater_8df3c6zj.py:47) (18 samples, 0.14%)</title><rect x="29.5566%" y="292" width="0.1448%" height="15" fill="rgb(230,59,30)" fg:x="3673" fg:w="18"/><text x="29.8066%" y="302.50"></text></g><g><title>edge_collect (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_edge_updater_8df3c6zj.py:64) (59 samples, 0.47%)</title><rect x="29.7015%" y="292" width="0.4748%" height="15" fill="rgb(209,121,21)" fg:x="3691" fg:w="59"/><text x="29.9515%" y="302.50"></text></g><g><title>edge_collect (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_edge_updater_8df3c6zj.py:65) (16 samples, 0.13%)</title><rect x="30.1762%" y="292" width="0.1288%" height="15" fill="rgb(220,109,13)" fg:x="3750" fg:w="16"/><text x="30.4262%" y="302.50"></text></g><g><title>edge_collect (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_edge_updater_8df3c6zj.py:93) (190 samples, 1.53%)</title><rect x="30.4981%" y="292" width="1.5289%" height="15" fill="rgb(232,18,1)" fg:x="3790" fg:w="190"/><text x="30.7481%" y="302.50"></text></g><g><title>_index_select (torch_geometric/nn/conv/message_passing.py:267) (177 samples, 1.42%)</title><rect x="30.6027%" y="308" width="1.4243%" height="15" fill="rgb(215,41,42)" fg:x="3803" fg:w="177"/><text x="30.8527%" y="318.50"></text></g><g><title>_index_select_safe (torch_geometric/nn/conv/message_passing.py:271) (171 samples, 1.38%)</title><rect x="30.6510%" y="324" width="1.3760%" height="15" fill="rgb(224,123,36)" fg:x="3809" fg:w="171"/><text x="30.9010%" y="334.50"></text></g><g><title>edge_updater (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_edge_updater_8df3c6zj.py:145) (458 samples, 3.69%)</title><rect x="28.4220%" y="276" width="3.6855%" height="15" fill="rgb(240,125,3)" fg:x="3532" fg:w="458"/><text x="28.6720%" y="286.50">edge..</text></g><g><title>edge_update (torch_geometric/nn/conv/gatv2_conv.py:358) (105 samples, 0.84%)</title><rect x="32.4616%" y="292" width="0.8449%" height="15" fill="rgb(205,98,50)" fg:x="4034" fg:w="105"/><text x="32.7116%" y="302.50"></text></g><g><title>edge_update (torch_geometric/nn/conv/gatv2_conv.py:363) (19 samples, 0.15%)</title><rect x="33.3628%" y="292" width="0.1529%" height="15" fill="rgb(205,185,37)" fg:x="4146" fg:w="19"/><text x="33.6128%" y="302.50"></text></g><g><title>edge_update (torch_geometric/nn/conv/gatv2_conv.py:364) (353 samples, 2.84%)</title><rect x="33.5157%" y="292" width="2.8406%" height="15" fill="rgb(238,207,15)" fg:x="4165" fg:w="353"/><text x="33.7657%" y="302.50">ed..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (341 samples, 2.74%)</title><rect x="33.6123%" y="308" width="2.7440%" height="15" fill="rgb(213,199,42)" fg:x="4177" fg:w="341"/><text x="33.8623%" y="318.50">_w..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (325 samples, 2.62%)</title><rect x="33.7410%" y="324" width="2.6153%" height="15" fill="rgb(235,201,11)" fg:x="4193" fg:w="325"/><text x="33.9910%" y="334.50">_c..</text></g><g><title>forward (torch_geometric/nn/dense/linear.py:147) (322 samples, 2.59%)</title><rect x="33.7652%" y="340" width="2.5911%" height="15" fill="rgb(207,46,11)" fg:x="4196" fg:w="322"/><text x="34.0152%" y="350.50">fo..</text></g><g><title>edge_update (torch_geometric/nn/conv/gatv2_conv.py:365) (48 samples, 0.39%)</title><rect x="36.3563%" y="292" width="0.3863%" height="15" fill="rgb(241,35,35)" fg:x="4518" fg:w="48"/><text x="36.6063%" y="302.50"></text></g><g><title>edge_update (torch_geometric/nn/conv/gatv2_conv.py:366) (108 samples, 0.87%)</title><rect x="36.7426%" y="292" width="0.8691%" height="15" fill="rgb(243,32,47)" fg:x="4566" fg:w="108"/><text x="36.9926%" y="302.50"></text></g><g><title>edge_update (torch_geometric/nn/conv/gatv2_conv.py:368) (109 samples, 0.88%)</title><rect x="37.6117%" y="292" width="0.8771%" height="15" fill="rgb(247,202,23)" fg:x="4674" fg:w="109"/><text x="37.8617%" y="302.50"></text></g><g><title>leaky_relu (torch/nn/functional.py:1677) (102 samples, 0.82%)</title><rect x="37.6680%" y="308" width="0.8208%" height="15" fill="rgb(219,102,11)" fg:x="4681" fg:w="102"/><text x="37.9180%" y="318.50"></text></g><g><title>edge_update (torch_geometric/nn/conv/gatv2_conv.py:369) (338 samples, 2.72%)</title><rect x="38.4888%" y="292" width="2.7199%" height="15" fill="rgb(243,110,44)" fg:x="4783" fg:w="338"/><text x="38.7388%" y="302.50">ed..</text></g><g><title>scatter (torch_geometric/utils/_scatter.py:100) (60 samples, 0.48%)</title><rect x="41.9329%" y="324" width="0.4828%" height="15" fill="rgb(222,74,54)" fg:x="5211" fg:w="60"/><text x="42.1829%" y="334.50"></text></g><g><title>broadcast (torch_geometric/utils/_scatter.py:195) (57 samples, 0.46%)</title><rect x="41.9570%" y="340" width="0.4587%" height="15" fill="rgb(216,99,12)" fg:x="5214" fg:w="57"/><text x="42.2070%" y="350.50"></text></g><g><title>is_in_onnx_export (torch_geometric/_onnx.py:10) (13 samples, 0.10%)</title><rect x="42.4238%" y="340" width="0.1046%" height="15" fill="rgb(226,22,26)" fg:x="5272" fg:w="13"/><text x="42.6738%" y="350.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:101) (29 samples, 0.23%)</title><rect x="42.4157%" y="324" width="0.2334%" height="15" fill="rgb(217,163,10)" fg:x="5271" fg:w="29"/><text x="42.6657%" y="334.50"></text></g><g><title>is_in_onnx_export (torch_geometric/_onnx.py:14) (14 samples, 0.11%)</title><rect x="42.5364%" y="340" width="0.1127%" height="15" fill="rgb(213,25,53)" fg:x="5286" fg:w="14"/><text x="42.7864%" y="350.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:102) (356 samples, 2.86%)</title><rect x="42.6491%" y="324" width="2.8647%" height="15" fill="rgb(252,105,26)" fg:x="5300" fg:w="356"/><text x="42.8991%" y="334.50">sc..</text></g><g><title>scatter (torch_geometric/utils/_scatter.py:65) (46 samples, 0.37%)</title><rect x="45.6345%" y="324" width="0.3702%" height="15" fill="rgb(220,39,43)" fg:x="5671" fg:w="46"/><text x="45.8845%" y="334.50"></text></g><g><title>softmax (torch_geometric/utils/_softmax.py:75) (581 samples, 4.68%)</title><rect x="41.4420%" y="308" width="4.6753%" height="15" fill="rgb(229,68,48)" fg:x="5150" fg:w="581"/><text x="41.6920%" y="318.50">softm..</text></g><g><title>softmax (torch_geometric/utils/_softmax.py:76) (237 samples, 1.91%)</title><rect x="46.1173%" y="308" width="1.9071%" height="15" fill="rgb(252,8,32)" fg:x="5731" fg:w="237"/><text x="46.3673%" y="318.50">s..</text></g><g><title>softmax (torch_geometric/utils/_softmax.py:77) (111 samples, 0.89%)</title><rect x="48.0245%" y="308" width="0.8932%" height="15" fill="rgb(223,20,43)" fg:x="5968" fg:w="111"/><text x="48.2745%" y="318.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:65) (24 samples, 0.19%)</title><rect x="50.3259%" y="324" width="0.1931%" height="15" fill="rgb(229,81,49)" fg:x="6254" fg:w="24"/><text x="50.5759%" y="334.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:74) (62 samples, 0.50%)</title><rect x="50.5190%" y="324" width="0.4989%" height="15" fill="rgb(236,28,36)" fg:x="6278" fg:w="62"/><text x="50.7690%" y="334.50"></text></g><g><title>broadcast (torch_geometric/utils/_scatter.py:195) (53 samples, 0.43%)</title><rect x="50.5915%" y="340" width="0.4265%" height="15" fill="rgb(249,185,26)" fg:x="6287" fg:w="53"/><text x="50.8415%" y="350.50"></text></g><g><title>softmax (torch_geometric/utils/_softmax.py:78) (496 samples, 3.99%)</title><rect x="48.9177%" y="308" width="3.9913%" height="15" fill="rgb(249,174,33)" fg:x="6079" fg:w="496"/><text x="49.1677%" y="318.50">soft..</text></g><g><title>scatter (torch_geometric/utils/_scatter.py:75) (235 samples, 1.89%)</title><rect x="51.0179%" y="324" width="1.8910%" height="15" fill="rgb(233,201,37)" fg:x="6340" fg:w="235"/><text x="51.2679%" y="334.50">s..</text></g><g><title>softmax (torch_geometric/utils/_softmax.py:79) (146 samples, 1.17%)</title><rect x="52.9090%" y="308" width="1.1749%" height="15" fill="rgb(221,78,26)" fg:x="6575" fg:w="146"/><text x="53.1590%" y="318.50"></text></g><g><title>edge_update (torch_geometric/nn/conv/gatv2_conv.py:370) (1,699 samples, 13.67%)</title><rect x="41.2087%" y="292" width="13.6718%" height="15" fill="rgb(250,127,30)" fg:x="5121" fg:w="1699"/><text x="41.4587%" y="302.50">edge_update (torch_ge..</text></g><g><title>softmax (torch_geometric/utils/_softmax.py:83) (99 samples, 0.80%)</title><rect x="54.0838%" y="308" width="0.7967%" height="15" fill="rgb(230,49,44)" fg:x="6721" fg:w="99"/><text x="54.3338%" y="318.50"></text></g><g><title>edge_updater (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_edge_updater_8df3c6zj.py:176) (3,048 samples, 24.53%)</title><rect x="32.2363%" y="276" width="24.5272%" height="15" fill="rgb(229,67,23)" fg:x="4006" fg:w="3048"/><text x="32.4863%" y="286.50">edge_updater (torch_geometric.nn.conv.g..</text></g><g><title>edge_update (torch_geometric/nn/conv/gatv2_conv.py:371) (234 samples, 1.88%)</title><rect x="54.8805%" y="292" width="1.8830%" height="15" fill="rgb(249,83,47)" fg:x="6820" fg:w="234"/><text x="55.1305%" y="302.50">e..</text></g><g><title>dropout (torch/nn/functional.py:1295) (206 samples, 1.66%)</title><rect x="55.1058%" y="308" width="1.6577%" height="15" fill="rgb(215,43,3)" fg:x="6848" fg:w="206"/><text x="55.3558%" y="318.50"></text></g><g><title>edge_updater (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_edge_updater_8df3c6zj.py:186) (17 samples, 0.14%)</title><rect x="56.8118%" y="276" width="0.1368%" height="15" fill="rgb(238,154,13)" fg:x="7060" fg:w="17"/><text x="57.0618%" y="286.50"></text></g><g><title>forward (torch_geometric/nn/conv/gatv2_conv.py:325) (3,648 samples, 29.36%)</title><rect x="27.6334%" y="260" width="29.3554%" height="15" fill="rgb(219,56,2)" fg:x="3434" fg:w="3648"/><text x="27.8834%" y="270.50">forward (torch_geometric/nn/conv/gatv2_conv.py:..</text></g><g><title>_check_input (torch_geometric/nn/conv/message_passing.py:213) (15 samples, 0.12%)</title><rect x="57.2785%" y="292" width="0.1207%" height="15" fill="rgb(233,0,4)" fg:x="7118" fg:w="15"/><text x="57.5285%" y="302.50"></text></g><g><title>is_sparse (torch_geometric/utils/sparse.py:141) (13 samples, 0.10%)</title><rect x="57.2946%" y="308" width="0.1046%" height="15" fill="rgb(235,30,7)" fg:x="7120" fg:w="13"/><text x="57.5446%" y="318.50"></text></g><g><title>_check_input (torch_geometric/nn/conv/message_passing.py:237) (23 samples, 0.19%)</title><rect x="57.4716%" y="292" width="0.1851%" height="15" fill="rgb(250,79,13)" fg:x="7142" fg:w="23"/><text x="57.7216%" y="302.50"></text></g><g><title>is_tracing (torch/jit/_trace.py:1328) (13 samples, 0.10%)</title><rect x="57.5521%" y="308" width="0.1046%" height="15" fill="rgb(211,146,34)" fg:x="7152" fg:w="13"/><text x="57.8021%" y="318.50"></text></g><g><title>propagate (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_propagate_st16sli_.py:134) (59 samples, 0.47%)</title><rect x="57.2061%" y="276" width="0.4748%" height="15" fill="rgb(228,22,38)" fg:x="7109" fg:w="59"/><text x="57.4561%" y="286.50"></text></g><g><title>collect (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_propagate_st16sli_.py:60) (62 samples, 0.50%)</title><rect x="57.8498%" y="292" width="0.4989%" height="15" fill="rgb(235,168,5)" fg:x="7189" fg:w="62"/><text x="58.0998%" y="302.50"></text></g><g><title>collect (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_propagate_st16sli_.py:61) (25 samples, 0.20%)</title><rect x="58.3488%" y="292" width="0.2012%" height="15" fill="rgb(221,155,16)" fg:x="7251" fg:w="25"/><text x="58.5988%" y="302.50"></text></g><g><title>_index_select (torch_geometric/nn/conv/message_passing.py:264) (13 samples, 0.10%)</title><rect x="58.7350%" y="308" width="0.1046%" height="15" fill="rgb(215,215,53)" fg:x="7299" fg:w="13"/><text x="58.9850%" y="318.50"></text></g><g><title>collect (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_propagate_st16sli_.py:85) (151 samples, 1.22%)</title><rect x="58.7109%" y="292" width="1.2151%" height="15" fill="rgb(223,4,10)" fg:x="7296" fg:w="151"/><text x="58.9609%" y="302.50"></text></g><g><title>_index_select (torch_geometric/nn/conv/message_passing.py:267) (135 samples, 1.09%)</title><rect x="58.8396%" y="308" width="1.0863%" height="15" fill="rgb(234,103,6)" fg:x="7312" fg:w="135"/><text x="59.0896%" y="318.50"></text></g><g><title>_index_select_safe (torch_geometric/nn/conv/message_passing.py:271) (134 samples, 1.08%)</title><rect x="58.8477%" y="324" width="1.0783%" height="15" fill="rgb(227,97,0)" fg:x="7313" fg:w="134"/><text x="59.0977%" y="334.50"></text></g><g><title>propagate (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_propagate_st16sli_.py:150) (291 samples, 2.34%)</title><rect x="57.6889%" y="276" width="2.3417%" height="15" fill="rgb(234,150,53)" fg:x="7169" fg:w="291"/><text x="57.9389%" y="286.50">p..</text></g><g><title>propagate (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_propagate_st16sli_.py:182) (166 samples, 1.34%)</title><rect x="60.1674%" y="276" width="1.3358%" height="15" fill="rgb(228,201,54)" fg:x="7477" fg:w="166"/><text x="60.4174%" y="286.50"></text></g><g><title>message (torch_geometric/nn/conv/gatv2_conv.py:375) (161 samples, 1.30%)</title><rect x="60.2076%" y="292" width="1.2956%" height="15" fill="rgb(222,22,37)" fg:x="7482" fg:w="161"/><text x="60.4576%" y="302.50"></text></g><g><title>wrapper (torch_geometric/experimental.py:116) (21 samples, 0.17%)</title><rect x="62.1228%" y="308" width="0.1690%" height="15" fill="rgb(237,53,32)" fg:x="7720" fg:w="21"/><text x="62.3728%" y="318.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:65) (34 samples, 0.27%)</title><rect x="63.0965%" y="404" width="0.2736%" height="15" fill="rgb(233,25,53)" fg:x="7841" fg:w="34"/><text x="63.3465%" y="414.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:74) (82 samples, 0.66%)</title><rect x="63.3701%" y="404" width="0.6599%" height="15" fill="rgb(210,40,34)" fg:x="7875" fg:w="82"/><text x="63.6201%" y="414.50"></text></g><g><title>broadcast (torch_geometric/utils/_scatter.py:195) (74 samples, 0.60%)</title><rect x="63.4345%" y="420" width="0.5955%" height="15" fill="rgb(241,220,44)" fg:x="7883" fg:w="74"/><text x="63.6845%" y="430.50"></text></g><g><title>aggregate (torch_geometric/nn/conv/message_passing.py:594) (555 samples, 4.47%)</title><rect x="61.8170%" y="292" width="4.4661%" height="15" fill="rgb(235,28,35)" fg:x="7682" fg:w="555"/><text x="62.0670%" y="302.50">aggre..</text></g><g><title>wrapper (torch_geometric/experimental.py:117) (496 samples, 3.99%)</title><rect x="62.2918%" y="308" width="3.9913%" height="15" fill="rgb(210,56,17)" fg:x="7741" fg:w="496"/><text x="62.5418%" y="318.50">wrap..</text></g><g><title>__call__ (torch_geometric/nn/aggr/base.py:131) (473 samples, 3.81%)</title><rect x="62.4769%" y="324" width="3.8062%" height="15" fill="rgb(224,130,29)" fg:x="7764" fg:w="473"/><text x="62.7269%" y="334.50">__ca..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (456 samples, 3.67%)</title><rect x="62.6137%" y="340" width="3.6694%" height="15" fill="rgb(235,212,8)" fg:x="7781" fg:w="456"/><text x="62.8637%" y="350.50">_wra..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (430 samples, 3.46%)</title><rect x="62.8229%" y="356" width="3.4602%" height="15" fill="rgb(223,33,50)" fg:x="7807" fg:w="430"/><text x="63.0729%" y="366.50">_ca..</text></g><g><title>forward (torch_geometric/nn/aggr/basic.py:22) (418 samples, 3.36%)</title><rect x="62.9194%" y="372" width="3.3636%" height="15" fill="rgb(219,149,13)" fg:x="7819" fg:w="418"/><text x="63.1694%" y="382.50">for..</text></g><g><title>reduce (torch_geometric/nn/aggr/base.py:185) (409 samples, 3.29%)</title><rect x="62.9919%" y="388" width="3.2912%" height="15" fill="rgb(250,156,29)" fg:x="7828" fg:w="409"/><text x="63.2419%" y="398.50">red..</text></g><g><title>scatter (torch_geometric/utils/_scatter.py:75) (280 samples, 2.25%)</title><rect x="64.0299%" y="404" width="2.2532%" height="15" fill="rgb(216,193,19)" fg:x="7957" fg:w="280"/><text x="64.2799%" y="414.50">s..</text></g><g><title>propagate (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_propagate_st16sli_.py:220) (582 samples, 4.68%)</title><rect x="61.6078%" y="276" width="4.6834%" height="15" fill="rgb(216,135,14)" fg:x="7656" fg:w="582"/><text x="61.8578%" y="286.50">propa..</text></g><g><title>forward (torch_geometric/nn/conv/gatv2_conv.py:329) (1,181 samples, 9.50%)</title><rect x="56.9888%" y="260" width="9.5035%" height="15" fill="rgb(241,47,5)" fg:x="7082" fg:w="1181"/><text x="57.2388%" y="270.50">forward (torch..</text></g><g><title>forward (torch_geometric/nn/conv/gatv2_conv.py:332) (41 samples, 0.33%)</title><rect x="66.4923%" y="260" width="0.3299%" height="15" fill="rgb(233,42,35)" fg:x="8263" fg:w="41"/><text x="66.7423%" y="270.50"></text></g><g><title>forward (torch_geometric/nn/conv/gatv2_conv.py:339) (18 samples, 0.14%)</title><rect x="66.8303%" y="260" width="0.1448%" height="15" fill="rgb(231,13,6)" fg:x="8305" fg:w="18"/><text x="67.0803%" y="270.50"></text></g><g><title>forward (torch_geometric/nn/conv/gatv2_conv.py:340) (149 samples, 1.20%)</title><rect x="66.9751%" y="260" width="1.1990%" height="15" fill="rgb(207,181,40)" fg:x="8323" fg:w="149"/><text x="67.2251%" y="270.50"></text></g><g><title>forward (torch_geometric/nn/conv/hetero_conv.py:160) (5,835 samples, 46.95%)</title><rect x="21.2360%" y="212" width="46.9542%" height="15" fill="rgb(254,173,49)" fg:x="2639" fg:w="5835"/><text x="21.4860%" y="222.50">forward (torch_geometric/nn/conv/hetero_conv.py:160)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (5,828 samples, 46.90%)</title><rect x="21.2923%" y="228" width="46.8979%" height="15" fill="rgb(221,1,38)" fg:x="2646" fg:w="5828"/><text x="21.5423%" y="238.50">_wrapped_call_impl (torch/nn/modules/module.py:1553)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (5,814 samples, 46.79%)</title><rect x="21.4050%" y="244" width="46.7852%" height="15" fill="rgb(206,124,46)" fg:x="2660" fg:w="5814"/><text x="21.6550%" y="254.50">_call_impl (torch/nn/modules/module.py:1562)</text></g><g><title>group (torch_geometric/nn/conv/hetero_conv.py:23) (53 samples, 0.43%)</title><rect x="68.3029%" y="228" width="0.4265%" height="15" fill="rgb(249,21,11)" fg:x="8488" fg:w="53"/><text x="68.5529%" y="238.50"></text></g><g><title>forward (modules.py:170) (6,134 samples, 49.36%)</title><rect x="19.7634%" y="164" width="49.3603%" height="15" fill="rgb(222,201,40)" fg:x="2456" fg:w="6134"/><text x="20.0134%" y="174.50">forward (modules.py:170)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (6,064 samples, 48.80%)</title><rect x="20.3267%" y="180" width="48.7970%" height="15" fill="rgb(235,61,29)" fg:x="2526" fg:w="6064"/><text x="20.5767%" y="190.50">_wrapped_call_impl (torch/nn/modules/module.py:1553)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (6,060 samples, 48.76%)</title><rect x="20.3589%" y="196" width="48.7648%" height="15" fill="rgb(219,207,3)" fg:x="2530" fg:w="6060"/><text x="20.6089%" y="206.50">_call_impl (torch/nn/modules/module.py:1562)</text></g><g><title>forward (torch_geometric/nn/conv/hetero_conv.py:166) (109 samples, 0.88%)</title><rect x="68.2466%" y="212" width="0.8771%" height="15" fill="rgb(222,56,46)" fg:x="8481" fg:w="109"/><text x="68.4966%" y="222.50"></text></g><g><title>group (torch_geometric/nn/conv/hetero_conv.py:24) (49 samples, 0.39%)</title><rect x="68.7294%" y="228" width="0.3943%" height="15" fill="rgb(239,76,54)" fg:x="8541" fg:w="49"/><text x="68.9794%" y="238.50"></text></g><g><title>forward (modules.py:171) (51 samples, 0.41%)</title><rect x="69.1237%" y="164" width="0.4104%" height="15" fill="rgb(231,124,27)" fg:x="8590" fg:w="51"/><text x="69.3737%" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (modules.py:171) (45 samples, 0.36%)</title><rect x="69.1720%" y="180" width="0.3621%" height="15" fill="rgb(249,195,6)" fg:x="8596" fg:w="45"/><text x="69.4220%" y="190.50"></text></g><g><title>relu (torch/nn/functional.py:1500) (41 samples, 0.33%)</title><rect x="69.2042%" y="196" width="0.3299%" height="15" fill="rgb(237,174,47)" fg:x="8600" fg:w="41"/><text x="69.4542%" y="206.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:53) (84 samples, 0.68%)</title><rect x="69.6548%" y="196" width="0.6759%" height="15" fill="rgb(206,201,31)" fg:x="8656" fg:w="84"/><text x="69.9048%" y="206.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:78) (17 samples, 0.14%)</title><rect x="70.3710%" y="196" width="0.1368%" height="15" fill="rgb(231,57,52)" fg:x="8745" fg:w="17"/><text x="70.6210%" y="206.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:79) (33 samples, 0.27%)</title><rect x="70.5078%" y="196" width="0.2656%" height="15" fill="rgb(248,177,22)" fg:x="8762" fg:w="33"/><text x="70.7578%" y="206.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:80) (13 samples, 0.10%)</title><rect x="70.7733%" y="196" width="0.1046%" height="15" fill="rgb(215,211,37)" fg:x="8795" fg:w="13"/><text x="71.0233%" y="206.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:83) (25 samples, 0.20%)</title><rect x="70.9584%" y="196" width="0.2012%" height="15" fill="rgb(241,128,51)" fg:x="8818" fg:w="25"/><text x="71.2084%" y="206.50"></text></g><g><title>forward (modules.py:182) (213 samples, 1.71%)</title><rect x="69.6467%" y="164" width="1.7140%" height="15" fill="rgb(227,165,31)" fg:x="8655" fg:w="213"/><text x="69.8967%" y="174.50"></text></g><g><title>global_mean_pool (torch_geometric/nn/pool/glob.py:63) (213 samples, 1.71%)</title><rect x="69.6467%" y="180" width="1.7140%" height="15" fill="rgb(228,167,24)" fg:x="8655" fg:w="213"/><text x="69.8967%" y="190.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:85) (25 samples, 0.20%)</title><rect x="71.1596%" y="196" width="0.2012%" height="15" fill="rgb(228,143,12)" fg:x="8843" fg:w="25"/><text x="71.4096%" y="206.50"></text></g><g><title>forward (modules.py:189) (20 samples, 0.16%)</title><rect x="71.3768%" y="164" width="0.1609%" height="15" fill="rgb(249,149,8)" fg:x="8870" fg:w="20"/><text x="71.6268%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (16 samples, 0.13%)</title><rect x="71.4090%" y="180" width="0.1288%" height="15" fill="rgb(243,35,44)" fg:x="8874" fg:w="16"/><text x="71.6590%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (15 samples, 0.12%)</title><rect x="71.4171%" y="196" width="0.1207%" height="15" fill="rgb(246,89,9)" fg:x="8875" fg:w="15"/><text x="71.6671%" y="206.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (15 samples, 0.12%)</title><rect x="71.4171%" y="212" width="0.1207%" height="15" fill="rgb(233,213,13)" fg:x="8875" fg:w="15"/><text x="71.6671%" y="222.50"></text></g><g><title>train_step (train.py:39) (6,533 samples, 52.57%)</title><rect x="19.0392%" y="116" width="52.5710%" height="15" fill="rgb(233,141,41)" fg:x="2366" fg:w="6533"/><text x="19.2892%" y="126.50">train_step (train.py:39)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (6,532 samples, 52.56%)</title><rect x="19.0472%" y="132" width="52.5630%" height="15" fill="rgb(239,167,4)" fg:x="2367" fg:w="6532"/><text x="19.2972%" y="142.50">_wrapped_call_impl (torch/nn/modules/module.py:1553)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (6,532 samples, 52.56%)</title><rect x="19.0472%" y="148" width="52.5630%" height="15" fill="rgb(209,217,16)" fg:x="2367" fg:w="6532"/><text x="19.2972%" y="158.50">_call_impl (torch/nn/modules/module.py:1562)</text></g><g><title>train_step (train.py:64) (18 samples, 0.14%)</title><rect x="71.8033%" y="116" width="0.1448%" height="15" fill="rgb(219,88,35)" fg:x="8923" fg:w="18"/><text x="72.0533%" y="126.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (18 samples, 0.14%)</title><rect x="71.8033%" y="132" width="0.1448%" height="15" fill="rgb(220,193,23)" fg:x="8923" fg:w="18"/><text x="72.0533%" y="142.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (16 samples, 0.13%)</title><rect x="71.8194%" y="148" width="0.1288%" height="15" fill="rgb(230,90,52)" fg:x="8925" fg:w="16"/><text x="72.0694%" y="158.50"></text></g><g><title>forward (torch/nn/modules/loss.py:538) (16 samples, 0.13%)</title><rect x="71.8194%" y="164" width="0.1288%" height="15" fill="rgb(252,106,19)" fg:x="8925" fg:w="16"/><text x="72.0694%" y="174.50"></text></g><g><title>train_step (train.py:94) (590 samples, 4.75%)</title><rect x="71.9723%" y="116" width="4.7477%" height="15" fill="rgb(206,74,20)" fg:x="8944" fg:w="590"/><text x="72.2223%" y="126.50">train_..</text></g><g><title>backward (torch/_tensor.py:521) (590 samples, 4.75%)</title><rect x="71.9723%" y="132" width="4.7477%" height="15" fill="rgb(230,138,44)" fg:x="8944" fg:w="590"/><text x="72.2223%" y="142.50">backwa..</text></g><g><title>backward (torch/autograd/__init__.py:289) (579 samples, 4.66%)</title><rect x="72.0608%" y="148" width="4.6592%" height="15" fill="rgb(235,182,43)" fg:x="8955" fg:w="579"/><text x="72.3108%" y="158.50">backw..</text></g><g><title>_engine_run_backward (torch/autograd/graph.py:769) (577 samples, 4.64%)</title><rect x="72.0769%" y="164" width="4.6431%" height="15" fill="rgb(242,16,51)" fg:x="8957" fg:w="577"/><text x="72.3269%" y="174.50">_engi..</text></g><g><title>step (torch/optim/adam.py:216) (19 samples, 0.15%)</title><rect x="76.8568%" y="164" width="0.1529%" height="15" fill="rgb(248,9,4)" fg:x="9551" fg:w="19"/><text x="77.1068%" y="174.50"></text></g><g><title>&lt;genexpr&gt; (torch/optim/optimizer.py:195) (13 samples, 0.10%)</title><rect x="77.0661%" y="228" width="0.1046%" height="15" fill="rgb(210,31,22)" fg:x="9577" fg:w="13"/><text x="77.3161%" y="238.50"></text></g><g><title>adam (torch/optim/adam.py:734) (16 samples, 0.13%)</title><rect x="77.0500%" y="196" width="0.1288%" height="15" fill="rgb(239,54,39)" fg:x="9575" fg:w="16"/><text x="77.3000%" y="206.50"></text></g><g><title>_default_to_fused_or_foreach (torch/optim/optimizer.py:191) (16 samples, 0.13%)</title><rect x="77.0500%" y="212" width="0.1288%" height="15" fill="rgb(230,99,41)" fg:x="9575" fg:w="16"/><text x="77.3000%" y="222.50"></text></g><g><title>_multi_tensor_adam (torch/optim/adam.py:518) (23 samples, 0.19%)</title><rect x="77.5891%" y="212" width="0.1851%" height="15" fill="rgb(253,106,12)" fg:x="9642" fg:w="23"/><text x="77.8391%" y="222.50"></text></g><g><title>_multi_tensor_adam (torch/optim/adam.py:534) (24 samples, 0.19%)</title><rect x="77.7983%" y="212" width="0.1931%" height="15" fill="rgb(213,46,41)" fg:x="9668" fg:w="24"/><text x="78.0483%" y="222.50"></text></g><g><title>_multi_tensor_adam (torch/optim/adam.py:537) (21 samples, 0.17%)</title><rect x="78.0800%" y="212" width="0.1690%" height="15" fill="rgb(215,133,35)" fg:x="9703" fg:w="21"/><text x="78.3300%" y="222.50"></text></g><g><title>_get_value (torch/optim/optimizer.py:101) (27 samples, 0.22%)</title><rect x="78.2973%" y="244" width="0.2173%" height="15" fill="rgb(213,28,5)" fg:x="9730" fg:w="27"/><text x="78.5473%" y="254.50"></text></g><g><title>_multi_tensor_adam (torch/optim/adam.py:584) (56 samples, 0.45%)</title><rect x="78.2490%" y="212" width="0.4506%" height="15" fill="rgb(215,77,49)" fg:x="9724" fg:w="56"/><text x="78.4990%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (torch/optim/adam.py:585) (55 samples, 0.44%)</title><rect x="78.2570%" y="228" width="0.4426%" height="15" fill="rgb(248,100,22)" fg:x="9725" fg:w="55"/><text x="78.5070%" y="238.50"></text></g><g><title>_get_value (torch/optim/optimizer.py:104) (23 samples, 0.19%)</title><rect x="78.5145%" y="244" width="0.1851%" height="15" fill="rgb(208,67,9)" fg:x="9757" fg:w="23"/><text x="78.7645%" y="254.50"></text></g><g><title>is_compiling (torch/_utils.py:862) (34 samples, 0.27%)</title><rect x="78.9973%" y="260" width="0.2736%" height="15" fill="rgb(219,133,21)" fg:x="9817" fg:w="34"/><text x="79.2473%" y="270.50"></text></g><g><title>_get_value (torch/optim/optimizer.py:101) (58 samples, 0.47%)</title><rect x="78.8203%" y="244" width="0.4667%" height="15" fill="rgb(246,46,29)" fg:x="9795" fg:w="58"/><text x="79.0703%" y="254.50"></text></g><g><title>_multi_tensor_adam (torch/optim/adam.py:587) (112 samples, 0.90%)</title><rect x="78.6996%" y="212" width="0.9013%" height="15" fill="rgb(246,185,52)" fg:x="9780" fg:w="112"/><text x="78.9496%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (torch/optim/adam.py:588) (109 samples, 0.88%)</title><rect x="78.7237%" y="228" width="0.8771%" height="15" fill="rgb(252,136,11)" fg:x="9783" fg:w="109"/><text x="78.9737%" y="238.50"></text></g><g><title>_get_value (torch/optim/optimizer.py:104) (39 samples, 0.31%)</title><rect x="79.2870%" y="244" width="0.3138%" height="15" fill="rgb(219,138,53)" fg:x="9853" fg:w="39"/><text x="79.5370%" y="254.50"></text></g><g><title>_dispatch_sqrt (torch/optim/optimizer.py:117) (15 samples, 0.12%)</title><rect x="79.7055%" y="244" width="0.1207%" height="15" fill="rgb(211,51,23)" fg:x="9905" fg:w="15"/><text x="79.9555%" y="254.50"></text></g><g><title>_multi_tensor_adam (torch/optim/adam.py:593) (29 samples, 0.23%)</title><rect x="79.6652%" y="212" width="0.2334%" height="15" fill="rgb(247,221,28)" fg:x="9900" fg:w="29"/><text x="79.9152%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (torch/optim/adam.py:593) (29 samples, 0.23%)</title><rect x="79.6652%" y="228" width="0.2334%" height="15" fill="rgb(251,222,45)" fg:x="9900" fg:w="29"/><text x="79.9152%" y="238.50"></text></g><g><title>_multi_tensor_adam (torch/optim/adam.py:602) (133 samples, 1.07%)</title><rect x="79.8986%" y="212" width="1.0703%" height="15" fill="rgb(217,162,53)" fg:x="9929" fg:w="133"/><text x="80.1486%" y="222.50"></text></g><g><title>_multi_tensor_adam (torch/optim/adam.py:604) (34 samples, 0.27%)</title><rect x="80.9689%" y="212" width="0.2736%" height="15" fill="rgb(229,93,14)" fg:x="10062" fg:w="34"/><text x="81.2189%" y="222.50"></text></g><g><title>_use_grad (torch/optim/optimizer.py:89) (614 samples, 4.94%)</title><rect x="76.8166%" y="148" width="4.9409%" height="15" fill="rgb(209,67,49)" fg:x="9546" fg:w="614"/><text x="77.0666%" y="158.50">_use_g..</text></g><g><title>step (torch/optim/adam.py:226) (590 samples, 4.75%)</title><rect x="77.0097%" y="164" width="4.7477%" height="15" fill="rgb(213,87,29)" fg:x="9570" fg:w="590"/><text x="77.2597%" y="174.50">step (..</text></g><g><title>maybe_fallback (torch/optim/optimizer.py:161) (586 samples, 4.72%)</title><rect x="77.0419%" y="180" width="4.7155%" height="15" fill="rgb(205,151,52)" fg:x="9574" fg:w="586"/><text x="77.2919%" y="190.50">maybe..</text></g><g><title>adam (torch/optim/adam.py:766) (569 samples, 4.58%)</title><rect x="77.1787%" y="196" width="4.5787%" height="15" fill="rgb(253,215,39)" fg:x="9591" fg:w="569"/><text x="77.4287%" y="206.50">adam ..</text></g><g><title>_multi_tensor_adam (torch/optim/adam.py:606) (54 samples, 0.43%)</title><rect x="81.3229%" y="212" width="0.4345%" height="15" fill="rgb(221,220,41)" fg:x="10106" fg:w="54"/><text x="81.5729%" y="222.50"></text></g><g><title>wrapper (torch/optim/optimizer.py:484) (616 samples, 4.96%)</title><rect x="76.8086%" y="132" width="4.9569%" height="15" fill="rgb(218,133,21)" fg:x="9545" fg:w="616"/><text x="77.0586%" y="142.50">wrappe..</text></g><g><title>train_step (train.py:95) (628 samples, 5.05%)</title><rect x="76.7200%" y="116" width="5.0535%" height="15" fill="rgb(221,193,43)" fg:x="9534" fg:w="628"/><text x="76.9700%" y="126.50">train_..</text></g><g><title>train (train.py:139) (10,122 samples, 81.45%)</title><rect x="1.8749%" y="100" width="81.4517%" height="15" fill="rgb(240,128,52)" fg:x="233" fg:w="10122"/><text x="2.1249%" y="110.50">train (train.py:139)</text></g><g><title>train_step (train.py:96) (193 samples, 1.55%)</title><rect x="81.7736%" y="116" width="1.5531%" height="15" fill="rgb(253,114,12)" fg:x="10162" fg:w="193"/><text x="82.0236%" y="126.50"></text></g><g><title>_reconfigure (mani_skill/envs/sapien_env.py:652) (13 samples, 0.10%)</title><rect x="83.4956%" y="260" width="0.1046%" height="15" fill="rgb(215,223,47)" fg:x="10376" fg:w="13"/><text x="83.7456%" y="270.50"></text></g><g><title>_clear (mani_skill/envs/sapien_env.py:1111) (13 samples, 0.10%)</title><rect x="83.4956%" y="276" width="0.1046%" height="15" fill="rgb(248,225,23)" fg:x="10376" fg:w="13"/><text x="83.7456%" y="286.50"></text></g><g><title>_setup_scene (mani_skill/envs/sapien_env.py:1065) (14 samples, 0.11%)</title><rect x="83.6002%" y="276" width="0.1127%" height="15" fill="rgb(250,108,0)" fg:x="10389" fg:w="14"/><text x="83.8502%" y="286.50"></text></g><g><title>_reconfigure (mani_skill/envs/sapien_env.py:654) (69 samples, 0.56%)</title><rect x="83.6002%" y="260" width="0.5552%" height="15" fill="rgb(228,208,7)" fg:x="10389" fg:w="69"/><text x="83.8502%" y="270.50"></text></g><g><title>_setup_scene (mani_skill/envs/sapien_env.py:1075) (55 samples, 0.44%)</title><rect x="83.7129%" y="276" width="0.4426%" height="15" fill="rgb(244,45,10)" fg:x="10403" fg:w="55"/><text x="83.9629%" y="286.50"></text></g><g><title>reset (mani_skill/envs/sapien_env.py:818) (92 samples, 0.74%)</title><rect x="83.4956%" y="244" width="0.7403%" height="15" fill="rgb(207,125,25)" fg:x="10376" fg:w="92"/><text x="83.7456%" y="254.50"></text></g><g><title>evaluate_policy (util.py:192) (104 samples, 0.84%)</title><rect x="83.4312%" y="132" width="0.8369%" height="15" fill="rgb(210,195,18)" fg:x="10368" fg:w="104"/><text x="83.6812%" y="142.50"></text></g><g><title>initialize_environment (util.py:131) (104 samples, 0.84%)</title><rect x="83.4312%" y="148" width="0.8369%" height="15" fill="rgb(249,80,12)" fg:x="10368" fg:w="104"/><text x="83.6812%" y="158.50"></text></g><g><title>make (gymnasium/envs/registration.py:802) (104 samples, 0.84%)</title><rect x="83.4312%" y="164" width="0.8369%" height="15" fill="rgb(221,65,9)" fg:x="10368" fg:w="104"/><text x="83.6812%" y="174.50"></text></g><g><title>make (mani_skill/utils/registration.py:182) (104 samples, 0.84%)</title><rect x="83.4312%" y="180" width="0.8369%" height="15" fill="rgb(235,49,36)" fg:x="10368" fg:w="104"/><text x="83.6812%" y="190.50"></text></g><g><title>make (mani_skill/utils/registration.py:79) (104 samples, 0.84%)</title><rect x="83.4312%" y="196" width="0.8369%" height="15" fill="rgb(225,32,20)" fg:x="10368" fg:w="104"/><text x="83.6812%" y="206.50"></text></g><g><title>__init__ (custom_pick_cube.py:28) (104 samples, 0.84%)</title><rect x="83.4312%" y="212" width="0.8369%" height="15" fill="rgb(215,141,46)" fg:x="10368" fg:w="104"/><text x="83.6812%" y="222.50"></text></g><g><title>__init__ (mani_skill/envs/sapien_env.py:327) (98 samples, 0.79%)</title><rect x="83.4795%" y="228" width="0.7886%" height="15" fill="rgb(250,160,47)" fg:x="10374" fg:w="98"/><text x="83.7295%" y="238.50"></text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:915) (22 samples, 0.18%)</title><rect x="84.3888%" y="148" width="0.1770%" height="15" fill="rgb(216,222,40)" fg:x="10487" fg:w="22"/><text x="84.6388%" y="158.50"></text></g><g><title>&lt;listcomp&gt; (graph_maker.py:915) (19 samples, 0.15%)</title><rect x="84.4130%" y="164" width="0.1529%" height="15" fill="rgb(234,217,39)" fg:x="10490" fg:w="19"/><text x="84.6630%" y="174.50"></text></g><g><title>create_hetero_pick_cube_graph_batched (graph_maker.py:993) (15 samples, 0.12%)</title><rect x="84.6544%" y="148" width="0.1207%" height="15" fill="rgb(207,178,40)" fg:x="10520" fg:w="15"/><text x="84.9044%" y="158.50"></text></g><g><title>__call__ (torch_geometric/transforms/base_transform.py:32) (15 samples, 0.12%)</title><rect x="84.6544%" y="164" width="0.1207%" height="15" fill="rgb(221,136,13)" fg:x="10520" fg:w="15"/><text x="84.9044%" y="174.50"></text></g><g><title>evaluate_policy (util.py:209) (60 samples, 0.48%)</title><rect x="84.3084%" y="132" width="0.4828%" height="15" fill="rgb(249,199,10)" fg:x="10477" fg:w="60"/><text x="84.5584%" y="142.50"></text></g><g><title>edge_updater (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_edge_updater_8df3c6zj.py:145) (15 samples, 0.12%)</title><rect x="85.1211%" y="292" width="0.1207%" height="15" fill="rgb(249,222,13)" fg:x="10578" fg:w="15"/><text x="85.3711%" y="302.50"></text></g><g><title>scatter (torch_geometric/utils/_scatter.py:102) (17 samples, 0.14%)</title><rect x="85.6039%" y="340" width="0.1368%" height="15" fill="rgb(244,185,38)" fg:x="10638" fg:w="17"/><text x="85.8539%" y="350.50"></text></g><g><title>softmax (torch_geometric/utils/_softmax.py:75) (21 samples, 0.17%)</title><rect x="85.5878%" y="324" width="0.1690%" height="15" fill="rgb(236,202,9)" fg:x="10636" fg:w="21"/><text x="85.8378%" y="334.50"></text></g><g><title>softmax (torch_geometric/utils/_softmax.py:78) (14 samples, 0.11%)</title><rect x="85.8775%" y="324" width="0.1127%" height="15" fill="rgb(250,229,37)" fg:x="10672" fg:w="14"/><text x="86.1275%" y="334.50"></text></g><g><title>edge_update (torch_geometric/nn/conv/gatv2_conv.py:370) (63 samples, 0.51%)</title><rect x="85.5637%" y="308" width="0.5070%" height="15" fill="rgb(206,174,23)" fg:x="10633" fg:w="63"/><text x="85.8137%" y="318.50"></text></g><g><title>forward (torch_geometric/nn/conv/gatv2_conv.py:325) (131 samples, 1.05%)</title><rect x="85.0809%" y="276" width="1.0542%" height="15" fill="rgb(211,33,43)" fg:x="10573" fg:w="131"/><text x="85.3309%" y="286.50"></text></g><g><title>edge_updater (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_edge_updater_8df3c6zj.py:176) (110 samples, 0.89%)</title><rect x="85.2499%" y="292" width="0.8852%" height="15" fill="rgb(245,58,50)" fg:x="10594" fg:w="110"/><text x="85.4999%" y="302.50"></text></g><g><title>propagate (torch_geometric.nn.conv.gatv2_conv_GATv2Conv_propagate_st16sli_.py:220) (14 samples, 0.11%)</title><rect x="86.3201%" y="292" width="0.1127%" height="15" fill="rgb(244,68,36)" fg:x="10727" fg:w="14"/><text x="86.5701%" y="302.50"></text></g><g><title>aggregate (torch_geometric/nn/conv/message_passing.py:594) (14 samples, 0.11%)</title><rect x="86.3201%" y="308" width="0.1127%" height="15" fill="rgb(232,229,15)" fg:x="10727" fg:w="14"/><text x="86.5701%" y="318.50"></text></g><g><title>forward (torch_geometric/nn/conv/gatv2_conv.py:329) (38 samples, 0.31%)</title><rect x="86.1350%" y="276" width="0.3058%" height="15" fill="rgb(254,30,23)" fg:x="10704" fg:w="38"/><text x="86.3850%" y="286.50"></text></g><g><title>forward (torch_geometric/nn/conv/hetero_conv.py:160) (200 samples, 1.61%)</title><rect x="84.8717%" y="228" width="1.6094%" height="15" fill="rgb(235,160,14)" fg:x="10547" fg:w="200"/><text x="85.1217%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (200 samples, 1.61%)</title><rect x="84.8717%" y="244" width="1.6094%" height="15" fill="rgb(212,155,44)" fg:x="10547" fg:w="200"/><text x="85.1217%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (200 samples, 1.61%)</title><rect x="84.8717%" y="260" width="1.6094%" height="15" fill="rgb(226,2,50)" fg:x="10547" fg:w="200"/><text x="85.1217%" y="270.50"></text></g><g><title>forward (modules.py:170) (209 samples, 1.68%)</title><rect x="84.8395%" y="180" width="1.6818%" height="15" fill="rgb(234,177,6)" fg:x="10543" fg:w="209"/><text x="85.0895%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (207 samples, 1.67%)</title><rect x="84.8556%" y="196" width="1.6657%" height="15" fill="rgb(217,24,9)" fg:x="10545" fg:w="207"/><text x="85.1056%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (207 samples, 1.67%)</title><rect x="84.8556%" y="212" width="1.6657%" height="15" fill="rgb(220,13,46)" fg:x="10545" fg:w="207"/><text x="85.1056%" y="222.50"></text></g><g><title>evaluate_policy (util.py:212) (221 samples, 1.78%)</title><rect x="84.7912%" y="132" width="1.7784%" height="15" fill="rgb(239,221,27)" fg:x="10537" fg:w="221"/><text x="85.0412%" y="142.50">e..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (221 samples, 1.78%)</title><rect x="84.7912%" y="148" width="1.7784%" height="15" fill="rgb(222,198,25)" fg:x="10537" fg:w="221"/><text x="85.0412%" y="158.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (221 samples, 1.78%)</title><rect x="84.7912%" y="164" width="1.7784%" height="15" fill="rgb(211,99,13)" fg:x="10537" fg:w="221"/><text x="85.0412%" y="174.50">_..</text></g><g><title>_sapien_update_render (mani_skill/envs/scene.py:371) (15 samples, 0.12%)</title><rect x="86.6339%" y="244" width="0.1207%" height="15" fill="rgb(232,111,31)" fg:x="10766" fg:w="15"/><text x="86.8839%" y="254.50"></text></g><g><title>_gpu_setup_sensors (mani_skill/envs/scene.py:992) (15 samples, 0.12%)</title><rect x="86.6339%" y="260" width="0.1207%" height="15" fill="rgb(245,82,37)" fg:x="10766" fg:w="15"/><text x="86.8839%" y="270.50"></text></g><g><title>_sapien_gpu_setup_sensors (mani_skill/envs/scene.py:998) (15 samples, 0.12%)</title><rect x="86.6339%" y="276" width="0.1207%" height="15" fill="rgb(227,149,46)" fg:x="10766" fg:w="15"/><text x="86.8839%" y="286.50"></text></g><g><title>capture_image (mani_skill/utils/wrappers/record.py:324) (32 samples, 0.26%)</title><rect x="86.5696%" y="164" width="0.2575%" height="15" fill="rgb(218,36,50)" fg:x="10758" fg:w="32"/><text x="86.8196%" y="174.50"></text></g><g><title>render (mani_skill/vector/wrappers/gymnasium.py:169) (32 samples, 0.26%)</title><rect x="86.5696%" y="180" width="0.2575%" height="15" fill="rgb(226,80,48)" fg:x="10758" fg:w="32"/><text x="86.8196%" y="190.50"></text></g><g><title>render (mani_skill/envs/sapien_env.py:1287) (32 samples, 0.26%)</title><rect x="86.5696%" y="196" width="0.2575%" height="15" fill="rgb(238,224,15)" fg:x="10758" fg:w="32"/><text x="86.8196%" y="206.50"></text></g><g><title>render_rgb_array (mani_skill/envs/sapien_env.py:1231) (32 samples, 0.26%)</title><rect x="86.5696%" y="212" width="0.2575%" height="15" fill="rgb(241,136,10)" fg:x="10758" fg:w="32"/><text x="86.8196%" y="222.50"></text></g><g><title>update_render (mani_skill/envs/scene.py:364) (32 samples, 0.26%)</title><rect x="86.5696%" y="228" width="0.2575%" height="15" fill="rgb(208,32,45)" fg:x="10758" fg:w="32"/><text x="86.8196%" y="238.50"></text></g><g><title>step (mani_skill/utils/wrappers/record.py:433) (33 samples, 0.27%)</title><rect x="86.5696%" y="148" width="0.2656%" height="15" fill="rgb(207,135,9)" fg:x="10758" fg:w="33"/><text x="86.8196%" y="158.50"></text></g><g><title>_step_action (mani_skill/envs/sapien_env.py:1008) (412 samples, 3.32%)</title><rect x="86.8351%" y="244" width="3.3154%" height="15" fill="rgb(206,86,44)" fg:x="10791" fg:w="412"/><text x="87.0851%" y="254.50">_st..</text></g><g><title>step (mani_skill/envs/scene.py:358) (412 samples, 3.32%)</title><rect x="86.8351%" y="260" width="3.3154%" height="15" fill="rgb(245,177,15)" fg:x="10791" fg:w="412"/><text x="87.0851%" y="270.50">ste..</text></g><g><title>step (mani_skill/envs/sapien_env.py:939) (424 samples, 3.41%)</title><rect x="86.8351%" y="228" width="3.4119%" height="15" fill="rgb(206,64,50)" fg:x="10791" fg:w="424"/><text x="87.0851%" y="238.50">ste..</text></g><g><title>evaluate (custom_pick_cube.py:102) (26 samples, 0.21%)</title><rect x="90.2631%" y="260" width="0.2092%" height="15" fill="rgb(234,36,40)" fg:x="11217" fg:w="26"/><text x="90.5131%" y="270.50"></text></g><g><title>step (mani_skill/envs/sapien_env.py:941) (27 samples, 0.22%)</title><rect x="90.2631%" y="228" width="0.2173%" height="15" fill="rgb(213,64,8)" fg:x="11217" fg:w="27"/><text x="90.5131%" y="238.50"></text></g><g><title>get_info (mani_skill/envs/sapien_env.py:1036) (27 samples, 0.22%)</title><rect x="90.2631%" y="244" width="0.2173%" height="15" fill="rgb(210,75,36)" fg:x="11217" fg:w="27"/><text x="90.5131%" y="254.50"></text></g><g><title>quaternion_multiply (mani_skill/utils/geometry/rotation_conversions.py:420) (18 samples, 0.14%)</title><rect x="90.5528%" y="340" width="0.1448%" height="15" fill="rgb(229,88,21)" fg:x="11253" fg:w="18"/><text x="90.8028%" y="350.50"></text></g><g><title>__mul__ (mani_skill/utils/structs/pose.py:199) (22 samples, 0.18%)</title><rect x="90.5528%" y="324" width="0.1770%" height="15" fill="rgb(252,204,47)" fg:x="11253" fg:w="22"/><text x="90.8028%" y="334.50"></text></g><g><title>quaternion_apply (mani_skill/utils/geometry/rotation_conversions.py:457) (15 samples, 0.12%)</title><rect x="90.7701%" y="340" width="0.1207%" height="15" fill="rgb(208,77,27)" fg:x="11280" fg:w="15"/><text x="91.0201%" y="350.50"></text></g><g><title>quaternion_apply (mani_skill/utils/geometry/rotation_conversions.py:458) (21 samples, 0.17%)</title><rect x="90.8908%" y="340" width="0.1690%" height="15" fill="rgb(221,76,26)" fg:x="11295" fg:w="21"/><text x="91.1408%" y="350.50"></text></g><g><title>__mul__ (mani_skill/utils/structs/pose.py:200) (48 samples, 0.39%)</title><rect x="90.7299%" y="324" width="0.3863%" height="15" fill="rgb(225,139,18)" fg:x="11275" fg:w="48"/><text x="90.9799%" y="334.50"></text></g><g><title>get_obs (mani_skill/envs/sapien_env.py:507) (86 samples, 0.69%)</title><rect x="90.4804%" y="244" width="0.6920%" height="15" fill="rgb(230,137,11)" fg:x="11244" fg:w="86"/><text x="90.7304%" y="254.50"></text></g><g><title>_get_obs_state_dict (mani_skill/envs/sapien_env.py:528) (84 samples, 0.68%)</title><rect x="90.4965%" y="260" width="0.6759%" height="15" fill="rgb(212,28,1)" fg:x="11246" fg:w="84"/><text x="90.7465%" y="270.50"></text></g><g><title>_get_obs_extra (custom_pick_cube.py:93) (80 samples, 0.64%)</title><rect x="90.5287%" y="276" width="0.6438%" height="15" fill="rgb(248,164,17)" fg:x="11250" fg:w="80"/><text x="90.7787%" y="286.50"></text></g><g><title>&lt;listcomp&gt; (custom_pick_cube.py:93) (80 samples, 0.64%)</title><rect x="90.5287%" y="292" width="0.6438%" height="15" fill="rgb(222,171,42)" fg:x="11250" fg:w="80"/><text x="90.7787%" y="302.50"></text></g><g><title>global_pose (mani_skill/utils/structs/articulation_joint.py:290) (78 samples, 0.63%)</title><rect x="90.5448%" y="308" width="0.6277%" height="15" fill="rgb(243,84,45)" fg:x="11252" fg:w="78"/><text x="90.7948%" y="318.50"></text></g><g><title>step (mani_skill/envs/sapien_env.py:942) (87 samples, 0.70%)</title><rect x="90.4804%" y="228" width="0.7001%" height="15" fill="rgb(252,49,23)" fg:x="11244" fg:w="87"/><text x="90.7304%" y="238.50"></text></g><g><title>step (mani_skill/vector/wrappers/gymnasium.py:109) (544 samples, 4.38%)</title><rect x="86.8351%" y="180" width="4.3776%" height="15" fill="rgb(215,19,7)" fg:x="10791" fg:w="544"/><text x="87.0851%" y="190.50">step ..</text></g><g><title>step (mani_skill/utils/registration.py:161) (544 samples, 4.38%)</title><rect x="86.8351%" y="196" width="4.3776%" height="15" fill="rgb(238,81,41)" fg:x="10791" fg:w="544"/><text x="87.0851%" y="206.50">step ..</text></g><g><title>step (gymnasium/wrappers/order_enforcing.py:56) (544 samples, 4.38%)</title><rect x="86.8351%" y="212" width="4.3776%" height="15" fill="rgb(210,199,37)" fg:x="10791" fg:w="544"/><text x="87.0851%" y="222.50">step ..</text></g><g><title>step (mani_skill/utils/wrappers/record.py:434) (546 samples, 4.39%)</title><rect x="86.8351%" y="148" width="4.3937%" height="15" fill="rgb(244,192,49)" fg:x="10791" fg:w="546"/><text x="87.0851%" y="158.50">step ..</text></g><g><title>step (gymnasium/core.py:461) (546 samples, 4.39%)</title><rect x="86.8351%" y="164" width="4.3937%" height="15" fill="rgb(226,211,11)" fg:x="10791" fg:w="546"/><text x="87.0851%" y="174.50">step ..</text></g><g><title>get_human_render_camera_images (mani_skill/envs/scene.py:1059) (14 samples, 0.11%)</title><rect x="91.2288%" y="228" width="0.1127%" height="15" fill="rgb(236,162,54)" fg:x="11337" fg:w="14"/><text x="91.4788%" y="238.50"></text></g><g><title>capture (mani_skill/sensors/camera.py:188) (14 samples, 0.11%)</title><rect x="91.2288%" y="244" width="0.1127%" height="15" fill="rgb(220,229,9)" fg:x="11337" fg:w="14"/><text x="91.4788%" y="254.50"></text></g><g><title>take_picture (mani_skill/utils/structs/render_camera.py:262) (14 samples, 0.11%)</title><rect x="91.2288%" y="260" width="0.1127%" height="15" fill="rgb(250,87,22)" fg:x="11337" fg:w="14"/><text x="91.4788%" y="270.50"></text></g><g><title>capture_image (mani_skill/utils/wrappers/record.py:324) (16 samples, 0.13%)</title><rect x="91.2288%" y="164" width="0.1288%" height="15" fill="rgb(239,43,17)" fg:x="11337" fg:w="16"/><text x="91.4788%" y="174.50"></text></g><g><title>render (mani_skill/vector/wrappers/gymnasium.py:169) (16 samples, 0.13%)</title><rect x="91.2288%" y="180" width="0.1288%" height="15" fill="rgb(231,177,25)" fg:x="11337" fg:w="16"/><text x="91.4788%" y="190.50"></text></g><g><title>render (mani_skill/envs/sapien_env.py:1287) (16 samples, 0.13%)</title><rect x="91.2288%" y="196" width="0.1288%" height="15" fill="rgb(219,179,1)" fg:x="11337" fg:w="16"/><text x="91.4788%" y="206.50"></text></g><g><title>render_rgb_array (mani_skill/envs/sapien_env.py:1233) (16 samples, 0.13%)</title><rect x="91.2288%" y="212" width="0.1288%" height="15" fill="rgb(238,219,53)" fg:x="11337" fg:w="16"/><text x="91.4788%" y="222.50"></text></g><g><title>capture_image (mani_skill/utils/wrappers/record.py:325) (449 samples, 3.61%)</title><rect x="91.3575%" y="164" width="3.6131%" height="15" fill="rgb(232,167,36)" fg:x="11353" fg:w="449"/><text x="91.6075%" y="174.50">capt..</text></g><g><title>to_numpy (mani_skill/utils/common.py:358) (449 samples, 3.61%)</title><rect x="91.3575%" y="180" width="3.6131%" height="15" fill="rgb(244,19,51)" fg:x="11353" fg:w="449"/><text x="91.6075%" y="190.50">to_n..</text></g><g><title>_to_numpy (mani_skill/utils/common.py:344) (449 samples, 3.61%)</title><rect x="91.3575%" y="196" width="3.6131%" height="15" fill="rgb(224,6,22)" fg:x="11353" fg:w="449"/><text x="91.6075%" y="206.50">_to_..</text></g><g><title>tile_images (mani_skill/utils/visualization/misc.py:111) (28 samples, 0.23%)</title><rect x="95.2281%" y="180" width="0.2253%" height="15" fill="rgb(224,145,5)" fg:x="11834" fg:w="28"/><text x="95.4781%" y="190.50"></text></g><g><title>step (mani_skill/utils/wrappers/record.py:488) (804 samples, 6.47%)</title><rect x="91.2288%" y="148" width="6.4698%" height="15" fill="rgb(234,130,49)" fg:x="11337" fg:w="804"/><text x="91.4788%" y="158.50">step (ma..</text></g><g><title>capture_image (mani_skill/utils/wrappers/record.py:330) (339 samples, 2.73%)</title><rect x="94.9706%" y="164" width="2.7279%" height="15" fill="rgb(254,6,2)" fg:x="11802" fg:w="339"/><text x="95.2206%" y="174.50">ca..</text></g><g><title>tile_images (mani_skill/utils/visualization/misc.py:113) (279 samples, 2.25%)</title><rect x="95.4534%" y="180" width="2.2451%" height="15" fill="rgb(208,96,46)" fg:x="11862" fg:w="279"/><text x="95.7034%" y="190.50">t..</text></g><g><title>images_to_video (mani_skill/utils/visualization/misc.py:50) (197 samples, 1.59%)</title><rect x="97.6986%" y="180" width="1.5853%" height="15" fill="rgb(239,3,39)" fg:x="12141" fg:w="197"/><text x="97.9486%" y="190.50"></text></g><g><title>append_data (imageio/core/format.py:590) (197 samples, 1.59%)</title><rect x="97.6986%" y="196" width="1.5853%" height="15" fill="rgb(233,210,1)" fg:x="12141" fg:w="197"/><text x="97.9486%" y="206.50"></text></g><g><title>_append_data (imageio/plugins/ffmpeg.py:600) (195 samples, 1.57%)</title><rect x="97.7147%" y="212" width="1.5692%" height="15" fill="rgb(244,137,37)" fg:x="12143" fg:w="195"/><text x="97.9647%" y="222.50"></text></g><g><title>write_frames (imageio_ffmpeg/_io.py:627) (195 samples, 1.57%)</title><rect x="97.7147%" y="228" width="1.5692%" height="15" fill="rgb(240,136,2)" fg:x="12143" fg:w="195"/><text x="97.9647%" y="238.50"></text></g><g><title>flush_video (mani_skill/utils/wrappers/record.py:760) (200 samples, 1.61%)</title><rect x="97.6986%" y="164" width="1.6094%" height="15" fill="rgb(239,18,37)" fg:x="12141" fg:w="200"/><text x="97.9486%" y="174.50"></text></g><g><title>step (mani_skill/utils/wrappers/record.py:505) (257 samples, 2.07%)</title><rect x="97.6986%" y="148" width="2.0681%" height="15" fill="rgb(218,185,22)" fg:x="12141" fg:w="257"/><text x="97.9486%" y="158.50">s..</text></g><g><title>flush_video (mani_skill/utils/wrappers/record.py:768) (57 samples, 0.46%)</title><rect x="99.3080%" y="164" width="0.4587%" height="15" fill="rgb(225,218,4)" fg:x="12341" fg:w="57"/><text x="99.5580%" y="174.50"></text></g><g><title>evaluate_policy (util.py:216) (1,641 samples, 13.21%)</title><rect x="86.5696%" y="132" width="13.2051%" height="15" fill="rgb(230,182,32)" fg:x="10758" fg:w="1641"/><text x="86.8196%" y="142.50">evaluate_policy (uti..</text></g><g><title>train (train.py:150) (2,059 samples, 16.57%)</title><rect x="83.3669%" y="100" width="16.5688%" height="15" fill="rgb(242,56,43)" fg:x="10360" fg:w="2059"/><text x="83.6169%" y="110.50">train (train.py:150)</text></g><g><title>evaluate (evaluate.py:13) (2,059 samples, 16.57%)</title><rect x="83.3669%" y="116" width="16.5688%" height="15" fill="rgb(233,99,24)" fg:x="10360" fg:w="2059"/><text x="83.6169%" y="126.50">evaluate (evaluate.py:13)</text></g><g><title>evaluate_policy (util.py:232) (18 samples, 0.14%)</title><rect x="99.7908%" y="132" width="0.1448%" height="15" fill="rgb(234,209,42)" fg:x="12401" fg:w="18"/><text x="100.0408%" y="142.50"></text></g><g><title>close (mani_skill/utils/wrappers/record.py:789) (18 samples, 0.14%)</title><rect x="99.7908%" y="148" width="0.1448%" height="15" fill="rgb(227,7,12)" fg:x="12401" fg:w="18"/><text x="100.0408%" y="158.50"></text></g><g><title>close (gymnasium/core.py:475) (18 samples, 0.14%)</title><rect x="99.7908%" y="164" width="0.1448%" height="15" fill="rgb(245,203,43)" fg:x="12401" fg:w="18"/><text x="100.0408%" y="174.50"></text></g><g><title>close (mani_skill/vector/wrappers/gymnasium.py:157) (18 samples, 0.14%)</title><rect x="99.7908%" y="180" width="0.1448%" height="15" fill="rgb(238,205,33)" fg:x="12401" fg:w="18"/><text x="100.0408%" y="190.50"></text></g><g><title>close (gymnasium/core.py:475) (18 samples, 0.14%)</title><rect x="99.7908%" y="196" width="0.1448%" height="15" fill="rgb(231,56,7)" fg:x="12401" fg:w="18"/><text x="100.0408%" y="206.50"></text></g><g><title>close (gymnasium/core.py:475) (18 samples, 0.14%)</title><rect x="99.7908%" y="212" width="0.1448%" height="15" fill="rgb(244,186,29)" fg:x="12401" fg:w="18"/><text x="100.0408%" y="222.50"></text></g><g><title>close (mani_skill/envs/sapien_env.py:1114) (18 samples, 0.14%)</title><rect x="99.7908%" y="228" width="0.1448%" height="15" fill="rgb(234,111,31)" fg:x="12401" fg:w="18"/><text x="100.0408%" y="238.50"></text></g><g><title>_clear (mani_skill/envs/sapien_env.py:1111) (18 samples, 0.14%)</title><rect x="99.7908%" y="244" width="0.1448%" height="15" fill="rgb(241,149,10)" fg:x="12401" fg:w="18"/><text x="100.0408%" y="254.50"></text></g><g><title>&lt;module&gt; (main.py:34) (12,422 samples, 99.96%)</title><rect x="0.0000%" y="68" width="99.9598%" height="15" fill="rgb(249,206,44)" fg:x="0" fg:w="12422"/><text x="0.2500%" y="78.50">&lt;module&gt; (main.py:34)</text></g><g><title>pipeline (main.py:23) (12,422 samples, 99.96%)</title><rect x="0.0000%" y="84" width="99.9598%" height="15" fill="rgb(251,153,30)" fg:x="0" fg:w="12422"/><text x="0.2500%" y="94.50">pipeline (main.py:23)</text></g><g><title>all (12,427 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(239,152,38)" fg:x="0" fg:w="12427"/><text x="0.2500%" y="62.50"></text></g></svg></svg>